(()=>{"use strict";var t={baseUrl:"https://mesto.nomoreparties.co/v1/".concat("cohort-64"),headers:{authorization:"d44b9fca-9567-456c-ae11-66fa146c6bcd","Content-Type":"application/json"}};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=e,this._container=document.querySelector(n)}var e,r;return e=t,r=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){var n=e._renderer(t);e.addItem(n)}))}},{key:"addItem",value:function(t){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?this._container.prepend(t):this._container.append(t)}}],r&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var u=function(){function t(e,n,r,o,i,u){var a=e.name,c=e.link,l=e.likes,s=e.owner,f=e.createdAt,p=e._id;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=a,this._link=c,this._likes=l,this._owner=s,this._created=f,this._id=p,this._userId=u,this._isLiked=this._checkIsLiked(),this._templateSelector=n,this._handleCardClick=r,this._handleDeleteCard=o,this._handleLikeCard=i}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__icon"),this._likeNumber=this._element.querySelector(".card__like-number"),this._likeBtn=this._element.querySelector(".card__icon");var t=this._element.querySelector(".card__image");return t.src=this._link,t.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this.setLikes(),this._owner._id!==this._userId&&this._element.querySelector(".card__delete").remove(),this._setEventlisteners(),this._element}},{key:"_setEventlisteners",value:function(){var t=this;this._element.querySelector(".card__icon").addEventListener("click",(function(){return t._likeCard()})),this._element.querySelector(".card__image").addEventListener("click",(function(){return t._handleCardClick(t._link,t._name)})),this._element.querySelector(".card__delete")&&this._element.querySelector(".card__delete").addEventListener("click",(function(){return t._handleDelete()}))}},{key:"_likeCard",value:function(){this._handleLikeCard(this._id,this._isLiked)}},{key:"blockLikeBtn",value:function(){this._likeButton.disabled=!0}},{key:"unblockLikeBtn",value:function(){this._likeButton.disabled=!1}},{key:"_handleDelete",value:function(){this._handleDeleteCard(this._id)}},{key:"_checkIsLiked",value:function(){var t=this;return this._likes.some((function(e){return e._id===t._userId}))}},{key:"setLikes",value:function(t){t&&(this._likes=t,this._isLiked=this._checkIsLiked()),this._likeNumber.textContent=this._likes.length,this._isLiked?this._likeBtn.classList.add("card__icon-button_active"):this._likeBtn.classList.remove("card__icon-button_active")}},{key:"delete",value:function(){this._element.remove(),this._element=null}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==a(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===a(o)?o:String(o)),r)}var o}var l=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._popupCloseBtn=this._popup.querySelector(".popup__button-close")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){e.target===e.currentTarget&&t.close()})),this._popupCloseBtn.addEventListener("click",(function(){t.close()}))}}])&&c(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function s(t){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==s(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=h(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},p.apply(this,arguments)}function y(t,e){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},y(t,e)}function h(t){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},h(t)}var _=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&y(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=h(r);if(o){var n=h(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===s(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._figureElement=e._popup.querySelector(".popup__image"),e._captionElement=e._popup.querySelector(".popup__image-name"),e}return e=u,(n=[{key:"open",value:function(t,e){this._figureElement.src=t,this._figureElement.alt=e,this._captionElement.textContent=e,p(h(u.prototype),"open",this).call(this)}}])&&f(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(l);function b(t){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},b(t)}function m(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==b(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==b(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===b(o)?o:String(o)),r)}var o}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=k(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},d.apply(this,arguments)}function v(t,e){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},v(t,e)}function k(t){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},k(t)}var S=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&v(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=k(r);if(o){var n=k(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===b(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._handleSubmit=e,r._form=r._popup.querySelector(".popup__form"),r._inputValues={},r._handleOpenForm=n,r.formName=r._form.getAttribute("name"),r._allInput=r._form.querySelectorAll(".popup__input"),r._submitButton=r._form.querySelector(".popup__save-button"),r._buttonText=r._submitButton.textContent,r}return e=u,n=[{key:"_getInputValues",value:function(){var t=this;return this._allInput.forEach((function(e){t._inputValues[e.name]=e.value})),this._inputValues}},{key:"setEventListeners",value:function(){var t=this;d(k(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._submit()}))}},{key:"_submit",value:function(){this._handleSubmit(this._getInputValues())}},{key:"blockSubmitButton",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Сохранение...";this._blockedButtonText=t,this._submitButton.disabled=!0,this._submitButton.textContent=this._blockedButtonText}},{key:"unblockSubmitButton",value:function(){this._submitButton.disabled=!1,this._submitButton.textContent=this._buttonText}},{key:"close",value:function(){d(k(u.prototype),"close",this).call(this),this._form.reset()}},{key:"open",value:function(){d(k(u.prototype),"open",this).call(this),this._handleOpenForm()}}],n&&m(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(l);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===g(o)?o:String(o)),r)}var o}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},w.apply(this,arguments)}function O(t,e){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},O(t,e)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var P=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&O(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=j(r);if(o){var n=j(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===g(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleSubmit=e,n._button=n._popup.querySelector(".popup__save-button"),n}return e=u,(n=[{key:"setEventListeners",value:function(){var t=this;w(j(u.prototype),"setEventListeners",this).call(this),this._button.addEventListener("click",(function(){t._handleSubmit(t._target)}))}},{key:"setTarget",value:function(t){this._target=t}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(l);function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function L(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==C(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==C(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===C(o)?o:String(o)),r)}var o}var B=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formElement=n,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var e,n;return e=t,(n=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var t=this;this._inputElements.forEach((function(e){e.addEventListener("input",(function(){t._isValid(e),t._toggleButtonState()}))})),this._toggleButtonState()}},{key:"_isValid",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),n.textContent=e,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent=""}},{key:"hideErrors",value:function(){var t=this;this._inputElements.forEach((function(e){t._hideInputError(e)}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButtonState():this._enableButtonState()}},{key:"disableButtonState",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableButtonState",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_hasInvalidInput",value:function(){return this._inputElements.some((function(t){return!1===t.validity.valid}))}}])&&L(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==T(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===T(o)?o:String(o)),r)}var o}var q=function(){function t(e){var n=e.nameElement,r=e.aboutElement,o=e.avatarElement;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=n,this._aboutElement=r,this._avatarElement=o}var e,n;return e=t,(n=[{key:"fill",value:function(t){var e=t.name,n=t.about,r=t.avatar,o=t.cohort,i=t._id;this._name=e,this._about=n,this._avatar=r,this._cohort=o,this.id=i}},{key:"getUserInfo",value:function(){return{name:this._name,about:this._about}}},{key:"renderName",value:function(){this._nameElement.textContent=this._name}},{key:"renderAbout",value:function(){this._aboutElement.textContent=this._about}},{key:"renderAvatar",value:function(){this._avatarElement.src=this._avatar}}])&&R(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function I(t){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},I(t)}function x(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==I(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===I(o)?o:String(o)),r)}var o}var A=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){var t="".concat(this._baseUrl,"/users/me");return fetch(t,{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.job,r="".concat(this._baseUrl,"/users/me");return fetch(r,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:n})}).then(this._checkResponse)}},{key:"changeAvatar",value:function(t){var e="".concat(this._baseUrl,"/users/me/avatar");return fetch(e,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){var t="".concat(this._baseUrl,"/cards");return fetch(t,{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"addNewCard",value:function(t){var e=t.name,n=t.link,r="".concat(this._baseUrl,"/cards");return fetch(r,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:n})}).then(this._checkResponse)}},{key:"deleteCard",value:function(t){var e="".concat(this._baseUrl,"/cards/").concat(t);return fetch(e,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"_setLike",value:function(t){var e="".concat(this._baseUrl,"/cards/").concat(t,"/likes");return fetch(e,{method:"PUT",headers:this._headers}).then(this._checkResponse).then((function(t){return t.likes}))}},{key:"_deleteLike",value:function(t){var e="".concat(this._baseUrl,"/cards/").concat(t,"/likes");return fetch(e,{method:"DELETE",headers:this._headers}).then(this._checkResponse).then((function(t){return t.likes}))}},{key:"toggleLike",value:function(t,e){return e?this._deleteLike(t):this._setLike(t)}},{key:"_checkResponse",value:function(t){return t.ok?t.json():t.json().then((function(t){throw new Error(t.message)}))}}])&&x(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),U={name:document.querySelector(".profile__name"),about:document.querySelector(".profile__about"),avatar:document.querySelector(".profile__avatar-img")},N=document.querySelector(".profile__button_type_edit"),D=".popup_type_edit-profile",V=document.querySelector(D),J=V.querySelector(".popup__input_type_name"),F=V.querySelector(".popup__input_type_job"),G=document.querySelector(".profile__avatar-button"),H=document.querySelector(".profile__button_type_add"),z={},M={};function K(t){var e=new u(t,"#card",Q,X,W,tt.id);return M[t._id]=e,e.generateCard()}function Q(t,e){ot.open(t,e)}function W(t,e){M[t].blockLikeBtn(),$.toggleLike(t,e).then((function(e){M[t].setLikes(e)})).catch((function(t){return console.error(t)})).finally((function(){M[t].unblockLikeBtn()}))}function X(t){it.setTarget(t),it.open()}function Y(){z[this.formName].hideErrors(),z[this.formName].disableButtonState()}var Z,$=new A(t),tt=new q({nameElement:U.name,aboutElement:U.about,avatarElement:U.avatar}),et=new r(K,".cards"),nt=new S(D,(function(t){nt.blockSubmitButton(),$.setUserInfo(t).then((function(t){tt.fill(t),tt.renderName(),tt.renderAbout(),nt.close()})).catch((function(t){return console.error(t)})).finally((function(){nt.unblockSubmitButton()}))}),Y),rt=new S(".popup_type_add-card",(function(t){rt.blockSubmitButton(),$.addNewCard(t).then((function(t){et.addItem(K(t),!0),rt.close()})).catch((function(t){return console.error(t)})).finally((function(){rt.unblockSubmitButton()}))}),Y),ot=new _(".popup_type_image"),it=new P(".popup_type_confirm",(function(t){$.deleteCard(t).then((function(){M[t].delete(),it.close()})).catch((function(t){return console.error(t)}))})),ut=new S(".popup_type_change-avatar",(function(t){ut.blockSubmitButton(),$.changeAvatar(t.link).then((function(t){tt.fill(t),tt.renderAvatar(),ut.close()})).catch((function(t){return console.error(t)})).finally((function(){ut.unblockSubmitButton()}))}),Y);Promise.all([$.getUserInfo(),$.getInitialCards()]).then((function(t){tt.fill(t[0]),tt.renderName(),tt.renderAbout(),tt.renderAvatar(),et.renderItems(t[1])})).catch((function(t){return console.error(t)})),nt.setEventListeners(),N.addEventListener("click",(function(){var t=tt.getUserInfo();J.value=t.name,F.value=t.about,nt.open()})),rt.setEventListeners(),H.addEventListener("click",(function(){rt.open()})),ut.setEventListeners(),G.addEventListener("click",(function(){ut.open()})),ot.setEventListeners(),it.setEventListeners(),Z={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},Array.from(document.querySelectorAll(Z.formSelector)).forEach((function(t){var e=new B(Z,t);z[t.getAttribute("name")]=e,e.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsSUFJYUEsRUFBWSxDQUN2QkMsUUFBUyxxQ0FBRkMsT0FKUSxhQUtmQyxRQUFTLENBQ1BDLGNBUFUsdUNBUVYsZUFBZ0IscUIsdXFCQ1JDQyxFQUFPLFdBQzFCLFNBQUFBLEVBQVlDLEVBQVVDLEksNEZBQW1CQyxDQUFBLEtBQUFILEdBQ3ZDSSxLQUFLQyxVQUFZSixFQUNqQkcsS0FBS0UsV0FBYUMsU0FBU0MsY0FBY04sRUFDM0MsQyxRQWlCQyxPLEVBZkRGLEUsRUFBQSxFQUFBUyxJQUFBLGNBQUFDLE1BQ0EsU0FBWUMsR0FBTyxJQUFBQyxFQUFBLEtBQ2pCRCxFQUFNRSxTQUFRLFNBQUNDLEdBQ2IsSUFBTUMsRUFBVUgsRUFBS1AsVUFBVVMsR0FDL0JGLEVBQUtJLFFBQVFELEVBQ2YsR0FDRixHQUVBLENBQUFOLElBQUEsVUFBQUMsTUFDQSxTQUFRSSxHQUFnQkcsVUFBQUMsT0FBQSxRQUFBQyxJQUFBRixVQUFBLElBQUFBLFVBQUEsR0FFcEJiLEtBQUtFLFdBQVdjLFFBQVFOLEdBRXhCVixLQUFLRSxXQUFXZSxPQUFPUCxFQUUzQixJLHVFQUFDZCxDQUFBLENBckJ5QixHLHVxQkNBUHNCLEVBQUksV0FDdkIsU0FBQUEsRUFBQUMsRUFFRUMsRUFDQUMsRUFDQUMsRUFDQUMsRUFDQUMsR0FDQSxJQU5FQyxFQUFJTixFQUFKTSxLQUFNQyxFQUFJUCxFQUFKTyxLQUFNQyxFQUFLUixFQUFMUSxNQUFPQyxFQUFLVCxFQUFMUyxNQUFrQkMsRUFBT1YsRUFBbEJXLFVBQW9CQyxFQUFHWixFQUFIWSxLLDRGQUFHaEMsQ0FBQSxLQUFBbUIsR0FPbkRsQixLQUFLZ0MsTUFBUVAsRUFDYnpCLEtBQUtpQyxNQUFRUCxFQUNiMUIsS0FBS2tDLE9BQVNQLEVBQ2QzQixLQUFLbUMsT0FBU1AsRUFDZDVCLEtBQUtvQyxTQUFXUCxFQUNoQjdCLEtBQUsrQixJQUFNQSxFQUNYL0IsS0FBS3FDLFFBQVViLEVBQ2Z4QixLQUFLc0MsU0FBV3RDLEtBQUt1QyxnQkFFckJ2QyxLQUFLd0Msa0JBQW9CcEIsRUFDekJwQixLQUFLeUMsaUJBQW1CcEIsRUFDeEJyQixLQUFLMEMsa0JBQW9CcEIsRUFDekJ0QixLQUFLMkMsZ0JBQWtCcEIsQ0FDekIsQyxRQW1HQyxPLEVBakdETCxHLEVBQUEsRUFBQWIsSUFBQSxlQUFBQyxNQUNBLFdBS0UsT0FKbUJILFNBQ2hCQyxjQUFjSixLQUFLd0MsbUJBQ25CSSxRQUFReEMsY0FBYyxTQUN0QnlDLFdBQVUsRUFFZixHQUVBLENBQUF4QyxJQUFBLGVBQUFDLE1BQ0EsV0FDRU4sS0FBSzhDLFNBQVc5QyxLQUFLK0MsZUFDckIvQyxLQUFLZ0QsWUFBY2hELEtBQUs4QyxTQUFTMUMsY0FBYyxlQUMvQ0osS0FBS2lELFlBQWNqRCxLQUFLOEMsU0FBUzFDLGNBQWMsc0JBQy9DSixLQUFLa0QsU0FBV2xELEtBQUs4QyxTQUFTMUMsY0FBYyxlQUU1QyxJQUFNK0MsRUFBTW5ELEtBQUs4QyxTQUFTMUMsY0FBYyxnQkFheEMsT0FaQStDLEVBQUlDLElBQU1wRCxLQUFLaUMsTUFDZmtCLEVBQUlFLElBQU1yRCxLQUFLZ0MsTUFDZmhDLEtBQUs4QyxTQUFTMUMsY0FBYyxnQkFBZ0JrRCxZQUFjdEQsS0FBS2dDLE1BRS9EaEMsS0FBS3VELFdBQ0R2RCxLQUFLbUMsT0FBT0osTUFBUS9CLEtBQUtxQyxTQUMzQnJDLEtBQUs4QyxTQUFTMUMsY0FBYyxpQkFBaUJvRCxTQUkvQ3hELEtBQUt5RCxxQkFFRXpELEtBQUs4QyxRQUNkLEdBRUEsQ0FBQXpDLElBQUEscUJBQUFDLE1BQ0EsV0FBcUIsSUFBQUUsRUFBQSxLQUVuQlIsS0FBSzhDLFNBQ0YxQyxjQUFjLGVBQ2RzRCxpQkFBaUIsU0FBUyxrQkFBTWxELEVBQUttRCxXQUFXLElBRW5EM0QsS0FBSzhDLFNBQ0YxQyxjQUFjLGdCQUNkc0QsaUJBQWlCLFNBQVMsa0JBQ3pCbEQsRUFBS2lDLGlCQUFpQmpDLEVBQUt5QixNQUFPekIsRUFBS3dCLE1BQU0sSUFHN0NoQyxLQUFLOEMsU0FBUzFDLGNBQWMsa0JBQzlCSixLQUFLOEMsU0FDRjFDLGNBQWMsaUJBQ2RzRCxpQkFBaUIsU0FBUyxrQkFBTWxELEVBQUtvRCxlQUFlLEdBRTNELEdBRUEsQ0FBQXZELElBQUEsWUFBQUMsTUFDQSxXQUNFTixLQUFLMkMsZ0JBQWdCM0MsS0FBSytCLElBQUsvQixLQUFLc0MsU0FDdEMsR0FFQSxDQUFBakMsSUFBQSxlQUFBQyxNQUNBLFdBQ0VOLEtBQUtnRCxZQUFZYSxVQUFXLENBQzlCLEdBRUEsQ0FBQXhELElBQUEsaUJBQUFDLE1BQ0EsV0FDRU4sS0FBS2dELFlBQVlhLFVBQVcsQ0FDOUIsR0FFQSxDQUFBeEQsSUFBQSxnQkFBQUMsTUFDQSxXQUNFTixLQUFLMEMsa0JBQWtCMUMsS0FBSytCLElBQzlCLEdBRUEsQ0FBQTFCLElBQUEsZ0JBQUFDLE1BQ0EsV0FBZ0IsSUFBQXdELEVBQUEsS0FDZCxPQUFPOUQsS0FBS2tDLE9BQU82QixNQUFLLFNBQUNDLEdBQU0sT0FBS0EsRUFBT2pDLE1BQVErQixFQUFLekIsT0FBTyxHQUNqRSxHQUVBLENBQUFoQyxJQUFBLFdBQUFDLE1BQ0EsU0FBU3FCLEdBQ0hBLElBQ0YzQixLQUFLa0MsT0FBU1AsRUFDZDNCLEtBQUtzQyxTQUFXdEMsS0FBS3VDLGlCQUd2QnZDLEtBQUtpRCxZQUFZSyxZQUFjdEQsS0FBS2tDLE9BQU9wQixPQUV2Q2QsS0FBS3NDLFNBQ1B0QyxLQUFLa0QsU0FBU2UsVUFBVUMsSUFBSSw0QkFFNUJsRSxLQUFLa0QsU0FBU2UsVUFBVVQsT0FBTywyQkFFbkMsR0FFQSxDQUFBbkQsSUFBQSxTQUFBQyxNQUNBLFdBQ0VOLEtBQUs4QyxTQUFTVSxTQUNkeEQsS0FBSzhDLFNBQVcsSUFDbEIsTSxvRUFBQzVCLENBQUEsQ0F6SHNCLEcsdXFCQ0FKaUQsRUFBSyxXQUN4QixTQUFBQSxFQUFZQyxJLDRGQUFlckUsQ0FBQSxLQUFBb0UsR0FDekJuRSxLQUFLcUUsT0FBU2xFLFNBQVNDLGNBQWNnRSxHQUNyQ3BFLEtBQUtzRSxnQkFBa0J0RSxLQUFLc0UsZ0JBQWdCQyxLQUFLdkUsTUFDakRBLEtBQUt3RSxlQUFpQnhFLEtBQUtxRSxPQUFPakUsY0FBYyx1QkFDbEQsQyxRQThCQyxPLEVBNUJEK0QsRyxFQUFBLEVBQUE5RCxJQUFBLE9BQUFDLE1BQ0EsV0FDRU4sS0FBS3FFLE9BQU9KLFVBQVVDLElBQUksZ0JBQzFCL0QsU0FBU3VELGlCQUFpQixVQUFXMUQsS0FBS3NFLGdCQUM1QyxHQUVBLENBQUFqRSxJQUFBLFFBQUFDLE1BQ0EsV0FDRU4sS0FBS3FFLE9BQU9KLFVBQVVULE9BQU8sZ0JBQzdCckQsU0FBU3NFLG9CQUFvQixVQUFXekUsS0FBS3NFLGdCQUMvQyxHQUVBLENBQUFqRSxJQUFBLGtCQUFBQyxNQUNBLFNBQWdCb0UsR0FDRSxXQUFaQSxFQUFJckUsS0FDTkwsS0FBSzJFLE9BRVQsR0FFQSxDQUFBdEUsSUFBQSxvQkFBQUMsTUFDQSxXQUFvQixJQUFBRSxFQUFBLEtBQ2xCUixLQUFLcUUsT0FBT1gsaUJBQWlCLGFBQWEsU0FBQ2dCLEdBQ3JDQSxFQUFJRSxTQUFXRixFQUFJRyxlQUFlckUsRUFBS21FLE9BQzdDLElBRUEzRSxLQUFLd0UsZUFBZWQsaUJBQWlCLFNBQVMsV0FDNUNsRCxFQUFLbUUsT0FDUCxHQUNGLE0sb0VBQUNSLENBQUEsQ0FuQ3VCLEcsZ3ZDQ0FLLElBRVZXLEVBQWMsU0FBQUMsSSxxUkFBQUMsQ0FBQUYsRUFBQUMsR0FBQSxJLFFBQUFFLEcsRUFBQUgsRSxxckJBQ2pDLFNBQUFBLEVBQVlWLEdBQWUsSUFBQTVELEVBRzhDLE8sNEZBSDlDVCxDQUFBLEtBQUErRSxJQUN6QnRFLEVBQUF5RSxFQUFBQyxLQUFBLEtBQU1kLElBQ0RlLGVBQWlCM0UsRUFBSzZELE9BQU9qRSxjQUFjLGlCQUNoREksRUFBSzRFLGdCQUFrQjVFLEVBQUs2RCxPQUFPakUsY0FBYyxzQkFBc0JJLENBQ3pFLENBUUMsTyxFQU5Ec0UsRyxFQUFBLEVBQUF6RSxJQUFBLE9BQUFDLE1BQ0EsU0FBSytFLEVBQVdDLEdBQ2R0RixLQUFLbUYsZUFBZS9CLElBQU1pQyxFQUMxQnJGLEtBQUttRixlQUFlOUIsSUFBTWlDLEVBQzFCdEYsS0FBS29GLGdCQUFnQjlCLFlBQWNnQyxFQUNuQ0MsRUFBQUMsRUFBQVYsRUFBQVcsV0FBQSxhQUFBUCxLQUFBLEtBQ0YsTSxvRUFBQ0osQ0FBQSxDQWJnQyxDQUFTWCxHLGd2Q0NGYixJQUVWdUIsRUFBYSxTQUFBWCxJLHFSQUFBQyxDQUFBVSxFQUFBWCxHQUFBLEksUUFBQUUsRyxFQUFBUyxFLHFyQkFDaEMsU0FBQUEsRUFBWXRCLEVBQWV1QixFQUFjQyxHQUFnQixJQUFBcEYsRUFTTCxPLDRGQVRLVCxDQUFBLEtBQUEyRixJQUN2RGxGLEVBQUF5RSxFQUFBQyxLQUFBLEtBQU1kLElBQ0R5QixjQUFnQkYsRUFDckJuRixFQUFLc0YsTUFBUXRGLEVBQUs2RCxPQUFPakUsY0FBYyxnQkFDdkNJLEVBQUt1RixhQUFlLENBQUMsRUFDckJ2RixFQUFLd0YsZ0JBQWtCSixFQUN2QnBGLEVBQUt5RixTQUFXekYsRUFBS3NGLE1BQU1JLGFBQWEsUUFDeEMxRixFQUFLMkYsVUFBWTNGLEVBQUtzRixNQUFNTSxpQkFBaUIsaUJBQzdDNUYsRUFBSzZGLGNBQWdCN0YsRUFBS3NGLE1BQU0xRixjQUFjLHVCQUM5Q0ksRUFBSzhGLFlBQWM5RixFQUFLNkYsY0FBYy9DLFlBQVk5QyxDQUNwRCxDQWdEQyxPLEVBOUNEa0YsRSxFQUFBLEVBQUFyRixJQUFBLGtCQUFBQyxNQUNBLFdBQWtCLElBQUF3RCxFQUFBLEtBSWhCLE9BSEE5RCxLQUFLbUcsVUFBVTFGLFNBQVEsU0FBQzhGLEdBQ3RCekMsRUFBS2lDLGFBQWFRLEVBQU05RSxNQUFROEUsRUFBTWpHLEtBQ3hDLElBQ09OLEtBQUsrRixZQUNkLEdBRUEsQ0FBQTFGLElBQUEsb0JBQUFDLE1BQ0EsV0FBb0IsSUFBQWtHLEVBQUEsS0FDbEJqQixFQUFBQyxFQUFBRSxFQUFBRCxXQUFBLDBCQUFBUCxLQUFBLE1BRUFsRixLQUFLOEYsTUFBTXBDLGlCQUFpQixVQUFVLFNBQUNnQixHQUNyQ0EsRUFBSStCLGlCQUNKRCxFQUFLRSxTQUNQLEdBQ0YsR0FFQSxDQUFBckcsSUFBQSxVQUFBQyxNQUNBLFdBQ0VOLEtBQUs2RixjQUFjN0YsS0FBSzJHLGtCQUMxQixHQUVBLENBQUF0RyxJQUFBLG9CQUFBQyxNQUNBLFdBQXVELElBQXJDc0csRUFBaUIvRixVQUFBQyxPQUFBLFFBQUFDLElBQUFGLFVBQUEsR0FBQUEsVUFBQSxHQUFHLGdCQUNwQ2IsS0FBSzZHLG1CQUFxQkQsRUFDMUI1RyxLQUFLcUcsY0FBY3hDLFVBQVcsRUFDOUI3RCxLQUFLcUcsY0FBYy9DLFlBQWN0RCxLQUFLNkcsa0JBQ3hDLEdBRUEsQ0FBQXhHLElBQUEsc0JBQUFDLE1BQ0EsV0FDRU4sS0FBS3FHLGNBQWN4QyxVQUFXLEVBQzlCN0QsS0FBS3FHLGNBQWMvQyxZQUFjdEQsS0FBS3NHLFdBQ3hDLEdBRUEsQ0FBQWpHLElBQUEsUUFBQUMsTUFDQSxXQUNFaUYsRUFBQUMsRUFBQUUsRUFBQUQsV0FBQSxjQUFBUCxLQUFBLE1BQ0FsRixLQUFLOEYsTUFBTWdCLE9BQ2IsR0FFQSxDQUFBekcsSUFBQSxPQUFBQyxNQUNBLFdBQ0VpRixFQUFBQyxFQUFBRSxFQUFBRCxXQUFBLGFBQUFQLEtBQUEsTUFDQWxGLEtBQUtnRyxpQkFDUCxJLHVFQUFDTixDQUFBLENBM0QrQixDQUFTdkIsRyxndkNDRlosSUFFVjRDLEVBQXFCLFNBQUFoQyxJLHFSQUFBQyxDQUFBK0IsRUFBQWhDLEdBQUEsSSxRQUFBRSxHLEVBQUE4QixFLHFyQkFDeEMsU0FBQUEsRUFBWTNDLEVBQWV1QixHQUFjLElBQUFuRixFQUd5QixPLDRGQUh6QlQsQ0FBQSxLQUFBZ0gsSUFDdkN2RyxFQUFBeUUsRUFBQUMsS0FBQSxLQUFNZCxJQUNEeUIsY0FBZ0JGLEVBQ3JCbkYsRUFBS3dHLFFBQVV4RyxFQUFLNkQsT0FBT2pFLGNBQWMsdUJBQXVCSSxDQUNsRSxDQWNDLE8sRUFaRHVHLEcsRUFBQSxFQUFBMUcsSUFBQSxvQkFBQUMsTUFDQSxXQUFvQixJQUFBd0QsRUFBQSxLQUNsQnlCLEVBQUFDLEVBQUF1QixFQUFBdEIsV0FBQSwwQkFBQVAsS0FBQSxNQUVBbEYsS0FBS2dILFFBQVF0RCxpQkFBaUIsU0FBUyxXQUNyQ0ksRUFBSytCLGNBQWMvQixFQUFLbUQsUUFDMUIsR0FDRixHQUVBLENBQUE1RyxJQUFBLFlBQUFDLE1BQ0EsU0FBVXNFLEdBQ1I1RSxLQUFLaUgsUUFBVXJDLENBQ2pCLE0sb0VBQUNtQyxDQUFBLENBbkJ1QyxDQUFTNUMsRyx1cUJDRjlCK0MsRUFBYSxXQUM5QixTQUFBQSxFQUFhQyxFQUFhQyxJLDRGQUFhckgsQ0FBQSxLQUFBbUgsR0FDckNsSCxLQUFLcUgsYUFBZUQsRUFDcEJwSCxLQUFLc0gsY0FBZ0JILEVBQVlJLGFBQ2pDdkgsS0FBS3dILGVBQWlCTCxFQUFZTSxjQUNsQ3pILEtBQUswSCxzQkFBd0JQLEVBQVlRLHFCQUN6QzNILEtBQUs0SCxxQkFBdUJULEVBQVlVLG9CQUN4QzdILEtBQUs4SCxpQkFBbUJYLEVBQVlZLGdCQUNwQy9ILEtBQUtnSSxZQUFjYixFQUFZYyxXQUMvQmpJLEtBQUtrSSxlQUFpQkMsTUFBTUMsS0FBS3BJLEtBQUtxSCxhQUFhakIsaUJBQWlCcEcsS0FBS3dILGlCQUN6RXhILEtBQUtxSSxlQUFpQnJJLEtBQUtxSCxhQUFhakgsY0FBY0osS0FBSzBILHNCQUM3RCxDLFFBaUVDLE8sRUFqRUFSLEcsRUFBQSxFQUFBN0csSUFBQSxtQkFBQUMsTUFFRCxXQUNJTixLQUFLc0ksb0JBQ1QsR0FBQyxDQUFBakksSUFBQSxxQkFBQUMsTUFFRCxXQUFzQixJQUFBRSxFQUFBLEtBQ3BCUixLQUFLa0ksZUFBZXpILFNBQVMsU0FBQThILEdBQzNCQSxFQUFhN0UsaUJBQWlCLFNBQVMsV0FDckNsRCxFQUFLZ0ksU0FBU0QsR0FDZC9ILEVBQUtpSSxvQkFDUCxHQUNGLElBRUF6SSxLQUFLeUksb0JBQ1AsR0FBQyxDQUFBcEksSUFBQSxXQUFBQyxNQUVELFNBQVVpSSxHQUNKQSxFQUFhRyxTQUFTQyxNQUN4QjNJLEtBQUs0SSxnQkFBZ0JMLEdBRXJCdkksS0FBSzZJLGdCQUFnQk4sRUFBY0EsRUFBYU8sa0JBRXBELEdBQUMsQ0FBQXpJLElBQUEsa0JBQUFDLE1BRUQsU0FBaUJpSSxFQUFjUSxHQUM3QixJQUFNQyxFQUFlaEosS0FBS3FILGFBQWFqSCxjQUFjLElBQURYLE9BQUs4SSxFQUFhVSxHQUFFLFdBQ3hFVixFQUFhdEUsVUFBVUMsSUFBSWxFLEtBQUs4SCxrQkFDaENrQixFQUFhMUYsWUFBY3lGLEVBQzNCQyxFQUFhL0UsVUFBVUMsSUFBSWxFLEtBQUtnSSxZQUNsQyxHQUFDLENBQUEzSCxJQUFBLGtCQUFBQyxNQUVELFNBQWlCaUksR0FDZixJQUFNUyxFQUFlaEosS0FBS3FILGFBQWFqSCxjQUFjLElBQURYLE9BQUs4SSxFQUFhVSxHQUFFLFdBQ3hFVixFQUFhdEUsVUFBVVQsT0FBT3hELEtBQUs4SCxrQkFDbkNrQixFQUFhL0UsVUFBVVQsT0FBT3hELEtBQUtnSSxhQUNuQ2dCLEVBQWExRixZQUFjLEVBQzdCLEdBQUMsQ0FBQWpELElBQUEsYUFBQUMsTUFFRCxXQUFhLElBQUF3RCxFQUFBLEtBQ1g5RCxLQUFLa0ksZUFBZXpILFNBQVEsU0FBQThGLEdBQzFCekMsRUFBSzhFLGdCQUFpQnJDLEVBQ3hCLEdBQ0YsR0FBQyxDQUFBbEcsSUFBQSxxQkFBQUMsTUFFRCxXQUNNTixLQUFLa0osbUJBQ1BsSixLQUFLbUoscUJBRUxuSixLQUFLb0osb0JBRVQsR0FBQyxDQUFBL0ksSUFBQSxxQkFBQUMsTUFFRCxXQUNFTixLQUFLcUksZUFBZXBFLFVBQVVDLElBQUlsRSxLQUFLNEgsc0JBQ3ZDNUgsS0FBS3FJLGVBQWV4RSxVQUFXLENBQ2pDLEdBQUMsQ0FBQXhELElBQUEscUJBQUFDLE1BRUQsV0FDRU4sS0FBS3FJLGVBQWVwRSxVQUFVVCxPQUFPeEQsS0FBSzRILHNCQUMxQzVILEtBQUtxSSxlQUFleEUsVUFBVyxDQUNqQyxHQUFDLENBQUF4RCxJQUFBLG1CQUFBQyxNQUVELFdBQ0UsT0FBT04sS0FBS2tJLGVBQWVuRSxNQUFNLFNBQUF3RSxHQUFZLE9BQW9DLElBQWhDQSxFQUFhRyxTQUFTQyxLQUFlLEdBQ3hGLE0sb0VBQUN6QixDQUFBLENBNUU2QixHLHVxQkNBYm1DLEVBQVEsV0FDM0IsU0FBQUEsRUFBQWxJLEdBQXdELElBQTNDbUksRUFBV25JLEVBQVhtSSxZQUFhQyxFQUFZcEksRUFBWm9JLGFBQWNDLEVBQWFySSxFQUFicUksZSw0RkFBYXpKLENBQUEsS0FBQXNKLEdBQ25EckosS0FBS3lKLGFBQWVILEVBQ3BCdEosS0FBSzBKLGNBQWdCSCxFQUNyQnZKLEtBQUsySixlQUFpQkgsQ0FDeEIsQyxRQWdDQyxPLEVBOUJESCxHLEVBQUEsRUFBQWhKLElBQUEsT0FBQUMsTUFDQSxTQUFBc0osR0FBeUMsSUFBbkNuSSxFQUFJbUksRUFBSm5JLEtBQU1vSSxFQUFLRCxFQUFMQyxNQUFPQyxFQUFNRixFQUFORSxPQUFRQyxFQUFNSCxFQUFORyxPQUFRaEksRUFBRzZILEVBQUg3SCxJQUNqQy9CLEtBQUtnQyxNQUFRUCxFQUNiekIsS0FBS2dLLE9BQVNILEVBQ2Q3SixLQUFLaUssUUFBVUgsRUFDZjlKLEtBQUtrSyxRQUFVSCxFQUNmL0osS0FBS2lKLEdBQUtsSCxDQUNaLEdBRUEsQ0FBQTFCLElBQUEsY0FBQUMsTUFDQSxXQUNFLE1BQU8sQ0FDTG1CLEtBQU16QixLQUFLZ0MsTUFDWDZILE1BQU83SixLQUFLZ0ssT0FFaEIsR0FFQSxDQUFBM0osSUFBQSxhQUFBQyxNQUNBLFdBQ0VOLEtBQUt5SixhQUFhbkcsWUFBY3RELEtBQUtnQyxLQUN2QyxHQUVBLENBQUEzQixJQUFBLGNBQUFDLE1BQ0EsV0FDRU4sS0FBSzBKLGNBQWNwRyxZQUFjdEQsS0FBS2dLLE1BQ3hDLEdBRUEsQ0FBQTNKLElBQUEsZUFBQUMsTUFDQSxXQUNFTixLQUFLMkosZUFBZXZHLElBQU1wRCxLQUFLaUssT0FDakMsTSxvRUFBQ1osQ0FBQSxDQXJDMEIsRyx1cUJDQVJjLEVBQUcsV0FDdEIsU0FBQUEsRUFBQWhKLEdBQWtDLElBQXBCM0IsRUFBTzJCLEVBQVAzQixRQUFTRSxFQUFPeUIsRUFBUHpCLFMsNEZBQU9LLENBQUEsS0FBQW9LLEdBQzVCbkssS0FBS29LLFNBQVc1SyxFQUNoQlEsS0FBS3FLLFNBQVczSyxDQUNsQixDLFFBMEdDLE8sRUExR0F5SyxHLEVBQUEsRUFBQTlKLElBQUEsY0FBQUMsTUFFRCxXQUNFLElBQU1nSyxFQUFNLEdBQUg3SyxPQUFNTyxLQUFLb0ssU0FBUSxhQUU1QixPQUFPRyxNQUFNRCxFQUFLLENBQ2hCRSxPQUFRLE1BQ1I5SyxRQUFTTSxLQUFLcUssV0FDYkksS0FBS3pLLEtBQUswSyxlQUNmLEdBQUMsQ0FBQXJLLElBQUEsY0FBQUMsTUFFRCxTQUFBc0osR0FBMkIsSUFBYm5JLEVBQUltSSxFQUFKbkksS0FBTWtKLEVBQUdmLEVBQUhlLElBQ1pMLEVBQU0sR0FBSDdLLE9BQU1PLEtBQUtvSyxTQUFRLGFBRTVCLE9BQU9HLE1BQU1ELEVBQUssQ0FDaEJFLE9BQVEsUUFDUjlLLFFBQVNNLEtBQUtxSyxTQUNkTyxLQUFNQyxLQUFLQyxVQUFVLENBQ25CckosS0FBQUEsRUFDQW9JLE1BQU9jLE1BRVJGLEtBQUt6SyxLQUFLMEssZUFDZixHQUFDLENBQUFySyxJQUFBLGVBQUFDLE1BRUQsU0FBYW9CLEdBQ1gsSUFBTTRJLEVBQU0sR0FBSDdLLE9BQU1PLEtBQUtvSyxTQUFRLG9CQUU1QixPQUFPRyxNQUFNRCxFQUFLLENBQ2hCRSxPQUFRLFFBQ1I5SyxRQUFTTSxLQUFLcUssU0FDZE8sS0FBTUMsS0FBS0MsVUFBVSxDQUNuQmhCLE9BQVFwSSxNQUVUK0ksS0FBS3pLLEtBQUswSyxlQUNmLEdBQUMsQ0FBQXJLLElBQUEsa0JBQUFDLE1BRUQsV0FDRSxJQUFNZ0ssRUFBTSxHQUFIN0ssT0FBTU8sS0FBS29LLFNBQVEsVUFFNUIsT0FBT0csTUFBTUQsRUFBSyxDQUNoQkUsT0FBUSxNQUNSOUssUUFBU00sS0FBS3FLLFdBQ2JJLEtBQUt6SyxLQUFLMEssZUFDZixHQUFDLENBQUFySyxJQUFBLGFBQUFDLE1BRUQsU0FBQXlLLEdBQTJCLElBQWR0SixFQUFJc0osRUFBSnRKLEtBQU1DLEVBQUlxSixFQUFKckosS0FDWDRJLEVBQU0sR0FBSDdLLE9BQU1PLEtBQUtvSyxTQUFRLFVBRTVCLE9BQU9HLE1BQU1ELEVBQUssQ0FDaEJFLE9BQVEsT0FDUjlLLFFBQVNNLEtBQUtxSyxTQUNkTyxLQUFNQyxLQUFLQyxVQUFVLENBQ25CckosS0FBQUEsRUFDQUMsS0FBQUEsTUFFRCtJLEtBQUt6SyxLQUFLMEssZUFDZixHQUFDLENBQUFySyxJQUFBLGFBQUFDLE1BRUQsU0FBVzBLLEdBQ1QsSUFBTVYsRUFBTSxHQUFIN0ssT0FBTU8sS0FBS29LLFNBQVEsV0FBQTNLLE9BQVV1TCxHQUV0QyxPQUFPVCxNQUFNRCxFQUFLLENBQ2hCRSxPQUFRLFNBQ1I5SyxRQUFTTSxLQUFLcUssV0FDYkksS0FBS3pLLEtBQUswSyxlQUNmLEdBQUMsQ0FBQXJLLElBQUEsV0FBQUMsTUFFRCxTQUFTMEssR0FDUCxJQUFNVixFQUFNLEdBQUg3SyxPQUFNTyxLQUFLb0ssU0FBUSxXQUFBM0ssT0FBVXVMLEVBQU0sVUFFNUMsT0FBT1QsTUFBTUQsRUFBSyxDQUNoQkUsT0FBUSxNQUNSOUssUUFBU00sS0FBS3FLLFdBRWJJLEtBQUt6SyxLQUFLMEssZ0JBQ1ZELE1BQUssU0FBQ1EsR0FDTCxPQUFPQSxFQUFJdEosS0FDYixHQUNKLEdBQUMsQ0FBQXRCLElBQUEsY0FBQUMsTUFFRCxTQUFZMEssR0FDVixJQUFNVixFQUFNLEdBQUg3SyxPQUFNTyxLQUFLb0ssU0FBUSxXQUFBM0ssT0FBVXVMLEVBQU0sVUFFNUMsT0FBT1QsTUFBTUQsRUFBSyxDQUNoQkUsT0FBUSxTQUNSOUssUUFBU00sS0FBS3FLLFdBRWJJLEtBQUt6SyxLQUFLMEssZ0JBQ1ZELE1BQUssU0FBQ1EsR0FDTCxPQUFPQSxFQUFJdEosS0FDYixHQUNKLEdBQUMsQ0FBQXRCLElBQUEsYUFBQUMsTUFFRCxTQUFXMEssRUFBUUUsR0FDakIsT0FBSUEsRUFDS2xMLEtBQUttTCxZQUFZSCxHQUVqQmhMLEtBQUtvTCxTQUFTSixFQUV6QixHQUFDLENBQUEzSyxJQUFBLGlCQUFBQyxNQUVELFNBQWUySyxHQUNiLE9BQUlBLEVBQUlJLEdBQVdKLEVBQUlLLE9BQ2hCTCxFQUFJSyxPQUFPYixNQUFLLFNBQUNRLEdBQ3RCLE1BQU0sSUFBSU0sTUFBTU4sRUFBSU8sUUFDdEIsR0FDRixNLG9FQUFDckIsQ0FBQSxDQTlHcUIsR0N1QlhzQixFQUFpQixDQUFDaEssS0FIWHRCLFNBQVNDLGNBQWMsa0JBR095SixNQUY3QjFKLFNBQVNDLGNBQWMsbUJBRTJCMEosT0FEakQzSixTQUFTQyxjQUFjLHlCQU1oQ3NMLEVBQWlCdkwsU0FBU0MsY0FBYyw4QkFDeEN1TCxFQUF1QiwyQkFDOUJDLEVBQW1CekwsU0FBU0MsY0FBY3VMLEdBQ25DRSxFQUFtQkQsRUFBaUJ4TCxjQUFjLDJCQUNsRDBMLEVBQW9CRixFQUFpQnhMLGNBQWMsMEJBQ25EMkwsRUFBZTVMLFNBQVNDLGNBQWMsMkJBRXRDNEwsRUFBYTdMLFNBQVNDLGNBQWMsNkJDUDNDNkwsRUFBaUIsQ0FBQyxFQUNsQkMsRUFBUSxDQUFDLEVBZWYsU0FBU0MsRUFBUUMsR0FDZixJQUFNQyxFQUFPLElBQUluTCxFQUNma0wsRURuQmdDLFFDcUJoQy9LLEVBQ0FDLEVBQ0FnTCxFQUNBQyxHQUFTdEQsSUFHWCxPQURBaUQsRUFBTUUsRUFBS3JLLEtBQU9zSyxFQUNYQSxFQUFLRyxjQUNkLENBR0EsU0FBU25MLEVBQWdCZ0UsRUFBV0MsR0FDbENtSCxHQUFXQyxLQUFLckgsRUFBV0MsRUFDN0IsQ0FHQSxTQUFTZ0gsRUFBZXRCLEVBQVFFLEdBQzlCZ0IsRUFBTWxCLEdBQVEyQixlQUVkQyxFQUNHQyxXQUFXN0IsRUFBUUUsR0FDbkJULE1BQUssU0FBQzlJLEdBQ0x1SyxFQUFNbEIsR0FBUXpILFNBQVM1QixFQUN6QixJQUNDbUwsT0FBTSxTQUFDQyxHQUFHLE9BQUtDLFFBQVFDLE1BQU1GLEVBQUksSUFDakNHLFNBQVEsV0FDUGhCLEVBQU1sQixHQUFRbUMsZ0JBQ2hCLEdBQ0osQ0FHQSxTQUFTN0wsRUFBaUIwSixHQUN4Qm9DLEdBQXNCQyxVQUFVckMsR0FDaENvQyxHQUFzQlYsTUFDeEIsQ0FFQSxTQUFTWSxJQUNQckIsRUFBZWpNLEtBQUtpRyxVQUFVc0gsYUFDOUJ0QixFQUFlak0sS0FBS2lHLFVBQVVrRCxvQkFDaEMsQ0FHQSxJQXpEd0JxRSxFQXlEbEJaLEVBQU0sSUFBSXpDLEVBQUk1SyxHQUVkZ04sR0FBVyxJQUFJbEQsRUFBUyxDQUM1QkMsWUFBYW1DLEVBQWVoSyxLQUM1QjhILGFBQWNrQyxFQUFlNUIsTUFDN0JMLGNBQWVpQyxFQUFlM0IsU0FHMUIyRCxHQUFlLElBQUk3TixFQUFRdU0sRUR2RUosVUMwRXZCUCxHQUFtQixJQUFJbEcsRUFDM0JpRyxHQUNBLFNBQUNTLEdBQ0NSLEdBQWlCOEIsb0JBRWpCZCxFQUNHZSxZQUFZdkIsR0FDWjNCLE1BQUssU0FBQ1EsR0FDTHNCLEdBQVNxQixLQUFLM0MsR0FDZHNCLEdBQVNzQixhQUNUdEIsR0FBU3VCLGNBQ1RsQyxHQUFpQmpILE9BQ25CLElBQ0NtSSxPQUFNLFNBQUNDLEdBQUcsT0FBS0MsUUFBUUMsTUFBTUYsRUFBSSxJQUNqQ0csU0FBUSxXQUNQdEIsR0FBaUJtQyxxQkFDbkIsR0FDSixHQUNBVCxHQUdJVSxHQUFlLElBQUl0SSxFRHJGRyx3QkN1RjFCLFNBQUMwRyxHQUNDNEIsR0FBYU4sb0JBRWJkLEVBQ0dxQixXQUFXN0IsR0FDWDNCLE1BQUssU0FBQ1EsR0FDTHdDLEdBQWE3TSxRQUFRdUwsRUFBUWxCLElBQU0sR0FDbkMrQyxHQUFhckosT0FDZixJQUNDbUksT0FBTSxTQUFDQyxHQUFHLE9BQUtDLFFBQVFDLE1BQU1GLEVBQUksSUFDakNHLFNBQVEsV0FDUGMsR0FBYUQscUJBQ2YsR0FDSixHQUNBVCxHQUdJYixHQUFhLElBQUkzSCxFRHZHSyxxQkN5R3RCc0ksR0FBd0IsSUFBSXJHLEVEeEdBLHVCQzBHaEMsU0FBQ2lFLEdBQ0M0QixFQUNHc0IsV0FBV2xELEdBQ1hQLE1BQUssV0FDSnlCLEVBQU1sQixHQUFRbUQsU0FDZGYsR0FBc0J6SSxPQUN4QixJQUNDbUksT0FBTSxTQUFDQyxHQUFHLE9BQUtDLFFBQVFDLE1BQU1GLEVBQUksR0FDdEMsSUFHSXFCLEdBQWtCLElBQUkxSSxFRHpITyw2QkMySGpDLFNBQUMwRyxHQUNDZ0MsR0FBZ0JWLG9CQUVoQmQsRUFDR3lCLGFBQWFqQyxFQUFLMUssTUFDbEIrSSxNQUFLLFNBQUNRLEdBQ0xzQixHQUFTcUIsS0FBSzNDLEdBQ2RzQixHQUFTK0IsZUFDVEYsR0FBZ0J6SixPQUNsQixJQUNDbUksT0FBTSxTQUFDQyxHQUFHLE9BQUtDLFFBQVFDLE1BQU1GLEVBQUksSUFDakNHLFNBQVEsV0FDUGtCLEdBQWdCTCxxQkFDbEIsR0FDSixHQUNBVCxHQUlGaUIsUUFBUUMsSUFBSSxDQUFDNUIsRUFBSTZCLGNBQWU3QixFQUFJOEIsb0JBQ2pDakUsTUFBSyxTQUFDa0UsR0FDTHBDLEdBQVNxQixLQUFLZSxFQUFRLElBQ3RCcEMsR0FBU3NCLGFBQ1R0QixHQUFTdUIsY0FDVHZCLEdBQVMrQixlQUVUYixHQUFhbUIsWUFBWUQsRUFBUSxHQUNuQyxJQUNDN0IsT0FBTSxTQUFDQyxHQUFHLE9BQUtDLFFBQVFDLE1BQU1GLEVBQUksSUFHcENuQixHQUFpQmlELG9CQUVqQm5ELEVBQWVoSSxpQkFBaUIsU0FBUyxXQUFZLElBQUFvTCxFQUVqRHZDLEdBQVNrQyxjQURGNUMsRUFBaUJ2TCxNQUFLd08sRUFBNUJyTixLQUFxQ3FLLEVBQWtCeEwsTUFBS3dPLEVBQTlCakYsTUFFakMrQixHQUFpQmMsTUFHbkIsSUFHQXNCLEdBQWFhLG9CQUViN0MsRUFBV3RJLGlCQUFpQixTQUFTLFdBQ25Dc0ssR0FBYXRCLE1BQ2YsSUFHQTBCLEdBQWdCUyxvQkFFaEI5QyxFQUFhckksaUJBQWlCLFNBQVMsV0FDckMwSyxHQUFnQjFCLE1BQ2xCLElBR0FELEdBQVdvQyxvQkFHWHpCLEdBQXNCeUIsb0JBeExFckIsRURqQkksQ0FBQ2pHLGFBTkosZUFNb0NFLGNBTDNDLGdCQU1oQkUscUJBTHdCLHNCQUtpQkUsb0JBSnJCLDhCQUtwQkUsZ0JBSm9CLDBCQUlZRSxXQUhmLDhCQ21CU0UsTUFBTUMsS0FDOUJqSSxTQUFTaUcsaUJBQWlCb0gsRUFBY2pHLGVBRXhCOUcsU0FBUSxTQUFDMkcsR0FDekIsSUFBTTJILEVBQU8sSUFBSTdILEVBQWNzRyxFQUFlcEcsR0FDOUM2RSxFQUFlN0UsRUFBWWxCLGFBQWEsU0FBVzZJLEVBQ25EQSxFQUFLQyxrQkFDUCxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvdXRpbHMvYXBpQ29uZmlnLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdG9rZW4gPSAnZDQ0YjlmY2EtOTU2Ny00NTZjLWFlMTEtNjZmYTE0NmM2YmNkJztcclxuY29uc3QgY29ob3J0SWQgPSAnY29ob3J0LTY0JztcclxuXHJcblxyXG5leHBvcnQgY29uc3QgYXBpQ29uZmlnID0ge1xyXG4gIGJhc2VVcmw6IGBodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvJHtjb2hvcnRJZH1gLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IHRva2VuLFxyXG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gIH1cclxufTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IocmVuZGVyZXIsIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIC8v0KHQvtC30LTQsNC1diDQuCDQtNC+0LHQsNCy0LvRj9C1diDRjdC70LXQvNC10L3RgtGLXG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xuICAgICAgdGhpcy5hZGRJdGVtKGVsZW1lbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgLy/QlNC+0LHQstC70Y/QtdC8INGN0LvQtdC80LXQvdGCINC90LAg0YHRgtGA0LDQvdC40YbRg1xuICBhZGRJdGVtKGl0ZW0sIGlzSW52ZXJzZWQgPSBmYWxzZSkge1xuICAgIGlmIChpc0ludmVyc2VkKSB7XG4gICAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChpdGVtKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChpdGVtKTtcbiAgICB9XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihcbiAgICB7IG5hbWUsIGxpbmssIGxpa2VzLCBvd25lciwgY3JlYXRlZEF0OiBjcmVhdGVkLCBfaWQgfSxcbiAgICB0ZW1wbGF0ZVNlbGVjdG9yLFxuICAgIGhhbmRsZUNhcmRDbGljayxcbiAgICBoYW5kbGVEZWxldGVDYXJkLFxuICAgIGhhbmRsZUxpa2VDYXJkLFxuICAgIHVzZXJJZCxcbiAgKSB7XG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgdGhpcy5fbGluayA9IGxpbms7XG4gICAgdGhpcy5fbGlrZXMgPSBsaWtlcztcbiAgICB0aGlzLl9vd25lciA9IG93bmVyO1xuICAgIHRoaXMuX2NyZWF0ZWQgPSBjcmVhdGVkO1xuICAgIHRoaXMuX2lkID0gX2lkO1xuICAgIHRoaXMuX3VzZXJJZCA9IHVzZXJJZDtcbiAgICB0aGlzLl9pc0xpa2VkID0gdGhpcy5fY2hlY2tJc0xpa2VkKCk7XG5cbiAgICB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCA9IGhhbmRsZURlbGV0ZUNhcmQ7XG4gICAgdGhpcy5faGFuZGxlTGlrZUNhcmQgPSBoYW5kbGVMaWtlQ2FyZDtcbiAgfVxuXG4gIC8v0KjQsNCx0LvQvtC9INGB0L7Qt9C00LDQstCw0LXQvNC+0Lkg0LrQsNGA0YLQvtGH0LrQuCDQuNC3INGA0LDQt9C80LXRgtC60LhcbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRUZW1wbGUgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fdGVtcGxhdGVTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcbiAgICByZXR1cm4gY2FyZFRlbXBsZTtcbiAgfVxuXG4gIC8v0KHQvtC30LTQsNC10Lwg0LfQsNC/0L7Qu9C90LXQvdC90YPRjiDQv9C+INC00LDQvdC90YvQvCDQutCw0YDRgtC+0YfQutGDXG4gIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ljb25cIik7XG4gICAgdGhpcy5fbGlrZU51bWJlciA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLW51bWJlclwiKTtcbiAgICB0aGlzLl9saWtlQnRuID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ljb25cIik7XG4gICAgLy/Ql9Cw0L/QvtC70L3QtdC90LjQtSDRgdC+0LTQtdGA0LbQuNC80L7Qs9C+INC60LDRgNGC0L7Rh9C60LhcbiAgICBjb25zdCBpbWcgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gICAgaW1nLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgaW1nLmFsdCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcblxuICAgIHRoaXMuc2V0TGlrZXMoKTtcbiAgICBpZiAodGhpcy5fb3duZXIuX2lkICE9PSB0aGlzLl91c2VySWQpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGVcIikucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgLy/QndCw0LbQsNGC0LjQtSDQvdCwINC60LDRgNGC0L7Rh9C60YNcbiAgICB0aGlzLl9zZXRFdmVudGxpc3RlbmVycygpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cblxuICAvL9Cj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdC8INGB0LvRg9GI0LDRgtC10LvQuCDRgdC+0LHRi9GC0LjQuSDQvdCwINGN0LvQtdC80LXQvdGC0Ysg0LrQsNGA0YLQvtGH0LrQuFxuICBfc2V0RXZlbnRsaXN0ZW5lcnMoKSB7XG4gICAgLy/Qm9Cw0LnQulxuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ljb25cIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5fbGlrZUNhcmQoKSk7XG4gICAgLy/QmtCw0YDRgtC40L3QutCwXG4gICAgdGhpcy5fZWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX2xpbmssIHRoaXMuX25hbWUpXG4gICAgICApO1xuICAgIC8v0KPQtNCw0LvRj9C10Lwg0LrQsNGA0YLQvtGH0LrRgywg0L/RgNC4INC90LDQu9C40YfQuNC4XG4gICAgaWYgKHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGVcIikpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlXCIpXG4gICAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5faGFuZGxlRGVsZXRlKCkpO1xuICAgIH1cbiAgfVxuXG4gIC8v0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdC8INC70LDQudC6INC60LDRgNGC0L7Rh9C60LhcbiAgX2xpa2VDYXJkKCkge1xuICAgIHRoaXMuX2hhbmRsZUxpa2VDYXJkKHRoaXMuX2lkLCB0aGlzLl9pc0xpa2VkKTtcbiAgfVxuXG4gIC8v0JHQu9C+0LrQuNGA0YPQtdC8INC70LDQudC6XG4gIGJsb2NrTGlrZUJ0bigpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxuXG4gIC8v0KDQsNC30LHQu9C+0LrQuNGA0YPQtdGCINC70LDQudC6XG4gIHVuYmxvY2tMaWtlQnRuKCkge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIC8v0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdC8INC90LDQttCw0YLQuNC1INC90LAg0YPQtNCw0LvQtdC90LjQtSDQutCw0YDRgtC+0YfQutC4XG4gIF9oYW5kbGVEZWxldGUoKSB7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCh0aGlzLl9pZCk7XG4gIH1cblxuICAvL9Ce0L/RgNC10LTQtdC70Y/QtdC8LCDQtdGB0YLRjCDQu9C4INC70LDQudC6INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjyDQvdCwINC60LDRgNGC0L7Rh9C60LVcbiAgX2NoZWNrSXNMaWtlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fbGlrZXMuc29tZSgocGVyc29uKSA9PiBwZXJzb24uX2lkID09PSB0aGlzLl91c2VySWQpO1xuICB9XG5cbiAgLy/QntCx0YDQsNCx0LDRgtGL0LLQsNC10Lwg0LzQsNGB0YHQuNCyINC70LDQudC60L7QsiDQutCw0YDRgtC+0YfQutC4XG4gIHNldExpa2VzKGxpa2VzKSB7XG4gICAgaWYgKGxpa2VzKSB7XG4gICAgICB0aGlzLl9saWtlcyA9IGxpa2VzO1xuICAgICAgdGhpcy5faXNMaWtlZCA9IHRoaXMuX2NoZWNrSXNMaWtlZCgpO1xuICAgIH1cblxuICAgIHRoaXMuX2xpa2VOdW1iZXIudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XG5cbiAgICBpZiAodGhpcy5faXNMaWtlZCkge1xuICAgICAgdGhpcy5fbGlrZUJ0bi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9faWNvbi1idXR0b25fYWN0aXZlXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9saWtlQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19pY29uLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgfVxuICB9XG5cbiAgLy/Qo9C00LDQu9GP0LXQvCDQutCw0YDRgtC+0YfQutGDXG4gIGRlbGV0ZSgpIHtcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX3BvcHVwQ2xvc2VCdG4gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19idXR0b24tY2xvc2VcIik7XG4gIH1cblxuICAvL9Ce0YLQutGA0YvQstCw0LXQvFxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgLy/Ql9Cw0LrRgNGL0LLQsNC10LxcbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICAvL0VzY2FwZVxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICAvL9Cj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdC8INGB0LvRg9GI0LDRgtC10LvQuCDRgdC+0LHRi9GC0LjQuVxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChldnQudGFyZ2V0ID09PSBldnQuY3VycmVudFRhcmdldCkgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fcG9wdXBDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9maWd1cmVFbGVtZW50ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIik7XG4gICAgdGhpcy5fY2FwdGlvbkVsZW1lbnQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZS1uYW1lXCIpO1xuICB9XG5cbiAgLy/Ql9Cw0L/QvtC70L3Rj9C10YIg0L3Rg9C20L3Ri9C80Lgg0LfQvdCw0YfQtdC90LjRj9C80Lgg0Lgg0L7RgtC60YDRi9Cy0LDQtdGCXG4gIG9wZW4oaW1hZ2VMaW5rLCB0ZXh0KSB7XG4gICAgdGhpcy5fZmlndXJlRWxlbWVudC5zcmMgPSBpbWFnZUxpbms7XG4gICAgdGhpcy5fZmlndXJlRWxlbWVudC5hbHQgPSB0ZXh0O1xuICAgIHRoaXMuX2NhcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gdGV4dDtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXQsIGhhbmRsZU9wZW5Gb3JtKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlU3VibWl0ID0gaGFuZGxlU3VibWl0O1xuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xuICAgIHRoaXMuX2lucHV0VmFsdWVzID0ge307XG4gICAgdGhpcy5faGFuZGxlT3BlbkZvcm0gPSBoYW5kbGVPcGVuRm9ybTtcbiAgICB0aGlzLmZvcm1OYW1lID0gdGhpcy5fZm9ybS5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpO1xuICAgIHRoaXMuX2FsbElucHV0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3NhdmUtYnV0dG9uXCIpO1xuICAgIHRoaXMuX2J1dHRvblRleHQgPSB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XG4gIH1cblxuICAvL9Ch0L7RhdGA0LDQvdGP0LXQvCDQstGB0LUg0L/QvtC70Y9cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2FsbElucHV0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICB0aGlzLl9pbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLl9pbnB1dFZhbHVlcztcbiAgfVxuXG4gIC8v0KPRgdGC0LDQvdCw0LLQu9C40LLQsNC10Lwg0L3QtdC+0LHRhdC+0LTQuNC80YvQtSDRgdC70YPRiNCw0YLQtdC70LhcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX3N1Ym1pdCgpO1xuICAgIH0pO1xuICB9XG5cbiAgLy/QktGL0L/QvtC70L3Rj9C10Lwg0LTQtdC50YHRgtCy0LjRjyDQv9GA0Lgg0YHQsNCx0LzQuNGC0LUg0YTQvtGA0LzRi1xuICBfc3VibWl0KCkge1xuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgfVxuXG4gIC8v0JHQu9C+0LrQuNGA0YPQtdC8INC60L3QvtC/0LrRgyDQvtGC0L/RgNCw0LLQutC4INCy0L4g0LLRgNC10LzRjyDQt9Cw0L/RgNC+0YHQsFxuICBibG9ja1N1Ym1pdEJ1dHRvbihibG9ja2VkQnV0dG9uVGV4dCA9IFwi0KHQvtGF0YDQsNC90LXQvdC40LUuLi5cIikge1xuICAgIHRoaXMuX2Jsb2NrZWRCdXR0b25UZXh0ID0gYmxvY2tlZEJ1dHRvblRleHQ7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9ibG9ja2VkQnV0dG9uVGV4dDtcbiAgfVxuXG4gIC8v0JLQvtC30LLRgNCw0YnQsNC10Lwg0LrQvdC+0L/QutGDINC+0YLQv9GA0LDQstC60Lgg0L/QvtGB0LvQtSDQsdC70L7QutC40YDQvtCy0LrQuFxuICB1bmJsb2NrU3VibWl0QnV0dG9uKCkge1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX2J1dHRvblRleHQ7XG4gIH1cblxuICAvL9CX0LDQutGA0YvQstCw0LXQvFxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgfVxuXG4gIC8v0J7RgtC60YDRi9Cy0LDQtdC8XG4gIG9wZW4oKSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuX2hhbmRsZU9wZW5Gb3JtKCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZVN1Ym1pdCkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSBoYW5kbGVTdWJtaXQ7XHJcbiAgICB0aGlzLl9idXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NhdmUtYnV0dG9uJyk7XHJcbiAgfVxyXG5cclxuICAvL9Cj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdC8INC90LXQvtCx0YXQvtC00LjQvNGL0LUg0YHQu9GD0YjQsNGC0LXQu9C4XHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHRoaXMuX2J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlU3VibWl0KHRoaXMuX3RhcmdldCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8v0JfQsNC00LDQtdC8INC/0LDRgNCw0LzQtdGC0YAsINGBINC60L7RgtC+0YDRi9C8INGA0LDQsdC+0YLQsNC10YIg0L/QvtC/0LDQv1xyXG4gIHNldFRhcmdldCh0YXJnZXQpIHtcclxuICAgIHRoaXMuX3RhcmdldCA9IHRhcmdldDtcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgICBjb25zdHJ1Y3RvciAoZm9ybUNsYXNzZXMsIGZvcm1FbGVtZW50KSB7XG4gICAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gZm9ybUNsYXNzZXMuZm9ybVNlbGVjdG9yO1xuICAgICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGZvcm1DbGFzc2VzLmlucHV0U2VsZWN0b3I7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGZvcm1DbGFzc2VzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IGZvcm1DbGFzc2VzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBmb3JtQ2xhc3Nlcy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgICB0aGlzLl9lcnJvckNsYXNzID0gZm9ybUNsYXNzZXMuZXJyb3JDbGFzcztcbiAgICAgIHRoaXMuX2lucHV0RWxlbWVudHMgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcikpO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICAgIH1cbiAgXG4gICAgZW5hYmxlVmFsaWRhdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfVxuICBcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMgKCkge1xuICAgICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKCBpbnB1dEVsZW1lbnQgPT4ge1xuICAgICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5faXNWYWxpZChpbnB1dEVsZW1lbnQpO1xuICAgICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gIFxuICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICB9XG4gIFxuICAgIF9pc1ZhbGlkIChpbnB1dEVsZW1lbnQpIHtcbiAgICAgIGlmIChpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG4gIFxuICAgIF9zaG93SW5wdXRFcnJvciAoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcbiAgICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICB9XG4gIFxuICAgIF9oaWRlSW5wdXRFcnJvciAoaW5wdXRFbGVtZW50KSB7XG4gICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgICB9XG4gIFxuICAgIGhpZGVFcnJvcnMoKSB7XG4gICAgICB0aGlzLl9pbnB1dEVsZW1lbnRzLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvciAoaW5wdXQpO1xuICAgICAgfSk7XG4gICAgfVxuIFxuICAgIF90b2dnbGVCdXR0b25TdGF0ZSAoKSB7XG4gICAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcbiAgICAgICAgdGhpcy5kaXNhYmxlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2VuYWJsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZGlzYWJsZUJ1dHRvblN0YXRlICgpIHtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xuICAgIH1cbiAgXG4gICAgX2VuYWJsZUJ1dHRvblN0YXRlICgpIHtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIFxuICAgIF9oYXNJbnZhbGlkSW5wdXQgKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2lucHV0RWxlbWVudHMuc29tZSggaW5wdXRFbGVtZW50ID0+IGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCA9PT0gZmFsc2UpO1xuICAgIH1cbiAgfSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3Ioe25hbWVFbGVtZW50LCBhYm91dEVsZW1lbnQsIGF2YXRhckVsZW1lbnR9KSB7XG4gICAgdGhpcy5fbmFtZUVsZW1lbnQgPSBuYW1lRWxlbWVudDtcbiAgICB0aGlzLl9hYm91dEVsZW1lbnQgPSBhYm91dEVsZW1lbnQ7XG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudCA9IGF2YXRhckVsZW1lbnQ7XG4gIH1cblxuICAvL9Ch0L7RhdGA0LDQvdGP0LXQvCDQv9C+0LvRg9GH0LXQvdC90YPRjiDQuNC90YTQvtGA0LzQsNGG0LjRjiDQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70LVcbiAgZmlsbCh7bmFtZSwgYWJvdXQsIGF2YXRhciwgY29ob3J0LCBfaWR9KSB7XG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgdGhpcy5fYWJvdXQgPSBhYm91dDtcbiAgICB0aGlzLl9hdmF0YXIgPSBhdmF0YXI7XG4gICAgdGhpcy5fY29ob3J0ID0gY29ob3J0O1xuICAgIHRoaXMuaWQgPSBfaWQ7XG4gIH1cblxuICAvL9CS0L7Qt9Cy0YDQsNGJ0LDQtdC8INC40LzRjyDQuCDQuNC90YTRg1xuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5fbmFtZSxcbiAgICAgIGFib3V0OiB0aGlzLl9hYm91dFxuICAgIH1cbiAgfVxuXG4gIC8v0JjQvNGPINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xuICByZW5kZXJOYW1lKCkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgfVxuXG4gIC8v0J4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1XG4gIHJlbmRlckFib3V0KCkge1xuICAgIHRoaXMuX2Fib3V0RWxlbWVudC50ZXh0Q29udGVudCA9IHRoaXMuX2Fib3V0O1xuICB9XG5cbiAgLy/QkNCy0LDRgtCw0YAg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXG4gIHJlbmRlckF2YXRhcigpIHtcbiAgICB0aGlzLl9hdmF0YXJFbGVtZW50LnNyYyA9IHRoaXMuX2F2YXRhcjtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcclxuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xyXG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIGNvbnN0IHVybCA9IGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYDtcclxuXHJcbiAgICByZXR1cm4gZmV0Y2godXJsLCB7XHJcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyh7IG5hbWUsIGpvYiB9KSB7XHJcbiAgICBjb25zdCB1cmwgPSBgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWA7XHJcblxyXG4gICAgcmV0dXJuIGZldGNoKHVybCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWUsXHJcbiAgICAgICAgYWJvdXQ6IGpvYixcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgY2hhbmdlQXZhdGFyKGxpbmspIHtcclxuICAgIGNvbnN0IHVybCA9IGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmA7XHJcblxyXG4gICAgcmV0dXJuIGZldGNoKHVybCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogbGluayxcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgY29uc3QgdXJsID0gYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgO1xyXG5cclxuICAgIHJldHVybiBmZXRjaCh1cmwsIHtcclxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGFkZE5ld0NhcmQoeyBuYW1lLCBsaW5rIH0pIHtcclxuICAgIGNvbnN0IHVybCA9IGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYDtcclxuXHJcbiAgICByZXR1cm4gZmV0Y2godXJsLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lLFxyXG4gICAgICAgIGxpbmssXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgICBjb25zdCB1cmwgPSBgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gO1xyXG5cclxuICAgIHJldHVybiBmZXRjaCh1cmwsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIF9zZXRMaWtlKGNhcmRJZCkge1xyXG4gICAgY29uc3QgdXJsID0gYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYDtcclxuXHJcbiAgICByZXR1cm4gZmV0Y2godXJsLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pXHJcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICByZXR1cm4gcmVzLmxpa2VzO1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIF9kZWxldGVMaWtlKGNhcmRJZCkge1xyXG4gICAgY29uc3QgdXJsID0gYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYDtcclxuXHJcbiAgICByZXR1cm4gZmV0Y2godXJsLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pXHJcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICByZXR1cm4gcmVzLmxpa2VzO1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZUxpa2UoY2FyZElkLCBpc0xpa2VkKSB7XHJcbiAgICBpZiAoaXNMaWtlZCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5fZGVsZXRlTGlrZShjYXJkSWQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3NldExpa2UoY2FyZElkKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9jaGVja1Jlc3BvbnNlKHJlcykge1xyXG4gICAgaWYgKHJlcy5vaykgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICByZXR1cm4gcmVzLmpzb24oKS50aGVuKChyZXMpID0+IHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKHJlcy5tZXNzYWdlKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY29uc3Qgc2V0dGluZ3MgPSB7XHJcbiAgICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcclxuICAgIHBvcHVwQnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCIsXHJcbiAgfTtcclxuXHJcbmNvbnN0IHByb2ZpbGVQb3B1cEZvcm0gPSAnLnBvcHVwX19mb3JtJztcclxuY29uc3QgaW5wdXROYW1lID0gJy5wb3B1cF9faW5wdXQnO1xyXG5jb25zdCBzdWJtaXRCdG5TZWxlY3RvciA9ICcucG9wdXBfX3NhdmUtYnV0dG9uJztcclxuY29uc3QgaW5hY3RCdG5DbGFzcyA9ICdwb3B1cF9fc2F2ZS1idXR0b25fZGlzYWJsZWQnO1xyXG5jb25zdCBpbnB1dEVyckNsYXNzID0gJ3BvcHVwX19pbnB1dF90eXBlX2Vycm9yJztcclxuY29uc3QgZXJyb3JDbGFzcyA9ICdwb3B1cF9faW5wdXQtZXJyb3JfdmlzaWJsZSc7XHJcbmV4cG9ydCBjb25zdCBmb3JtU2VsZWN0b3IgPSB7Zm9ybVNlbGVjdG9yOiBwcm9maWxlUG9wdXBGb3JtLCBpbnB1dFNlbGVjdG9yOiBpbnB1dE5hbWUsIFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBzdWJtaXRCdG5TZWxlY3RvciwgaW5hY3RpdmVCdXR0b25DbGFzczogaW5hY3RCdG5DbGFzcywgXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBpbnB1dEVyckNsYXNzLCBlcnJvckNsYXNzXHJcbn07XHJcblxyXG5jb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19uYW1lJyk7XHJcbmNvbnN0IHByb2ZpbGVBYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hYm91dCcpO1xyXG5jb25zdCBwcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhci1pbWcnKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFbGVtZW50ID0ge25hbWU6IHByb2ZpbGVOYW1lLCBhYm91dDogcHJvZmlsZUFib3V0LCBhdmF0YXI6IHByb2ZpbGVBdmF0YXJcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNhcmRzU2VsZWN0b3IgPSAnLmNhcmRzJztcclxuZXhwb3J0IGNvbnN0IGNhcmRUZW1wbGF0ZVNlbGVjdG9yID0gJyNjYXJkJztcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbl90eXBlX2VkaXQnKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVQb3B1cFNlbGVjdG9yID0gJy5wb3B1cF90eXBlX2VkaXQtcHJvZmlsZSc7XHJcbmNvbnN0IHByb2ZpbGVQb3B1cEVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVQb3B1cFNlbGVjdG9yKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVOYW1lSW5wdXQgPSBwcm9maWxlUG9wdXBFZGl0LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdHlwZV9uYW1lJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQWJvdXRJbnB1dCA9IHByb2ZpbGVQb3B1cEVkaXQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF90eXBlX2pvYicpO1xyXG5leHBvcnQgY29uc3QgYXZhdGFyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhci1idXR0b24nKTtcclxuZXhwb3J0IGNvbnN0IGF2YXRhclBvcHVwU2VsZWN0b3IgPSAnLnBvcHVwX3R5cGVfY2hhbmdlLWF2YXRhcic7XHJcbmV4cG9ydCBjb25zdCBjYXJkQWRkQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbl90eXBlX2FkZCcpO1xyXG5leHBvcnQgY29uc3QgY2FyZEFkZFBvcHVwID0gJy5wb3B1cF90eXBlX2FkZC1jYXJkJztcclxuZXhwb3J0IGNvbnN0IGNhcmRQb3B1cEltZyA9ICcucG9wdXBfdHlwZV9pbWFnZSc7XHJcbmV4cG9ydCBjb25zdCBkZWxldFBvcHVwU2VsZWN0b3IgPSAnLnBvcHVwX3R5cGVfY29uZmlybSc7XHJcbiAgIiwiaW1wb3J0IFwiLi4vcGFnZXMvaW5kZXguY3NzXCI7XHJcbmltcG9ydCB7IGFwaUNvbmZpZyB9IGZyb20gXCIuLi91dGlscy9hcGlDb25maWcuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtYXRpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcblxyXG5pbXBvcnQge1xyXG4gIGNhcmRzU2VsZWN0b3IsXHJcbiAgY2FyZFRlbXBsYXRlU2VsZWN0b3IsXHJcbiAgZm9ybVNlbGVjdG9yLFxyXG4gIHByb2ZpbGVFbGVtZW50LFxyXG4gIHByb2ZpbGVFZGl0QnRuLFxyXG4gIHByb2ZpbGVOYW1lSW5wdXQsXHJcbiAgcHJvZmlsZUFib3V0SW5wdXQsXHJcbiAgcHJvZmlsZVBvcHVwU2VsZWN0b3IsXHJcbiAgYXZhdGFyQnV0dG9uLFxyXG4gIGF2YXRhclBvcHVwU2VsZWN0b3IsXHJcbiAgY2FyZEFkZEJ0bixcclxuICBjYXJkQWRkUG9wdXAsXHJcbiAgY2FyZFBvcHVwSW1nLFxyXG4gIGRlbGV0UG9wdXBTZWxlY3RvcixcclxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcblxyXG5jb25zdCBmb3Jtc1ZhbGlkYXRvciA9IHt9O1xyXG5jb25zdCBjYXJkcyA9IHt9O1xyXG5cclxuLy/Ql9Cw0L/Rg9GB0LrQsNC10YIg0LLQsNC70LjQtNCw0YbQuNGOINCy0YHQtdGFINGE0L7RgNC8INC90LAg0YHRgtGA0LDQvdC40YbQtVxyXG5mdW5jdGlvbiB2YWxpZGF0b3JGb3Jtcyhmb3JtU2VsZWN0b3JzKSB7XHJcbiAgY29uc3QgZm9ybVZhbGlkRWxlbWVudHMgPSBBcnJheS5mcm9tKFxyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChmb3JtU2VsZWN0b3JzLmZvcm1TZWxlY3RvcilcclxuICApO1xyXG4gIGZvcm1WYWxpZEVsZW1lbnRzLmZvckVhY2goKGZvcm1FbGVtZW50KSA9PiB7XHJcbiAgICBjb25zdCBmb3JtID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybVNlbGVjdG9ycywgZm9ybUVsZW1lbnQpO1xyXG4gICAgZm9ybXNWYWxpZGF0b3JbZm9ybUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKV0gPSBmb3JtO1xyXG4gICAgZm9ybS5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8v0KHQvtC30LTQsNC10YIg0Y3Qu9C10LzQtdC90YIg0LrQsNGA0YLQvtGH0LrQuFxyXG5mdW5jdGlvbiBuZXdDYXJkKGRhdGEpIHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXHJcbiAgICBkYXRhLFxyXG4gICAgY2FyZFRlbXBsYXRlU2VsZWN0b3IsXHJcbiAgICBoYW5kbGVDYXJkQ2xpY2ssXHJcbiAgICBoYW5kbGVEZWxldGVDYXJkLFxyXG4gICAgaGFuZGxlQ2FyZExpa2UsXHJcbiAgICB1c2VySW5mby5pZFxyXG4gICk7XHJcbiAgY2FyZHNbZGF0YS5faWRdID0gY2FyZDtcclxuICByZXR1cm4gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxufVxyXG5cclxuLy/QntCx0YDQsNCx0LDRgtGL0LLQsNC10YIg0L3QsNC20LDRgtC40LUg0L3QsCDQutCw0YDRgtC40L3QutGDINC60LDRgNGC0L7Rh9C60LhcclxuZnVuY3Rpb24gaGFuZGxlQ2FyZENsaWNrKGltYWdlTGluaywgdGV4dCkge1xyXG4gIGltYWdlUG9wdXAub3BlbihpbWFnZUxpbmssIHRleHQpO1xyXG59XHJcblxyXG4vL9Ce0LHRgNCw0LHQsNGC0YvQstCw0LXRgiDQvdCw0LbQsNGC0LjQtSDQvdCwINC70LDQudC6INCyINC60LDRgNGC0L7Rh9C60LVcclxuZnVuY3Rpb24gaGFuZGxlQ2FyZExpa2UoY2FyZElkLCBpc0xpa2VkKSB7XHJcbiAgY2FyZHNbY2FyZElkXS5ibG9ja0xpa2VCdG4oKTtcclxuXHJcbiAgYXBpXHJcbiAgICAudG9nZ2xlTGlrZShjYXJkSWQsIGlzTGlrZWQpXHJcbiAgICAudGhlbigobGlrZXMpID0+IHtcclxuICAgICAgY2FyZHNbY2FyZElkXS5zZXRMaWtlcyhsaWtlcyk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgY2FyZHNbY2FyZElkXS51bmJsb2NrTGlrZUJ0bigpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8v0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdGCINC90LDQttCw0YLQuNC1INC90LAg0YPQtNCw0LvQtdC90LjQtSDQutCw0YDRgtC+0YfQutC4XHJcbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgcG9wdXBXaXRoQ29uZmlybWF0aW9uLnNldFRhcmdldChjYXJkSWQpO1xyXG4gIHBvcHVwV2l0aENvbmZpcm1hdGlvbi5vcGVuKCk7XHJcbn1cclxuLy/QktGL0L/QvtC70L3Rj9C10YIg0YHQsdGA0L7RgSDRhNC+0YDQvNGLINC/0YDQuCDQvtGC0LrRgNGL0YLQuNC4INC/0L7Qv9Cw0L/QsCDRgSDRhNC+0YDQvNC+0LlcclxuZnVuY3Rpb24gaGFuZGxlRm9ybU9wZW4oKSB7XHJcbiAgZm9ybXNWYWxpZGF0b3JbdGhpcy5mb3JtTmFtZV0uaGlkZUVycm9ycygpO1xyXG4gIGZvcm1zVmFsaWRhdG9yW3RoaXMuZm9ybU5hbWVdLmRpc2FibGVCdXR0b25TdGF0ZSgpO1xyXG59XHJcblxyXG4vL9CY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPINC60LvQsNGB0YHQvtCyXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoYXBpQ29uZmlnKTtcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICBuYW1lRWxlbWVudDogcHJvZmlsZUVsZW1lbnQubmFtZSxcclxuICBhYm91dEVsZW1lbnQ6IHByb2ZpbGVFbGVtZW50LmFib3V0LFxyXG4gIGF2YXRhckVsZW1lbnQ6IHByb2ZpbGVFbGVtZW50LmF2YXRhcixcclxufSk7XHJcblxyXG5jb25zdCBjYXJkc1NlY3Rpb24gPSBuZXcgU2VjdGlvbihuZXdDYXJkLCBjYXJkc1NlbGVjdG9yKTtcclxuXHJcbi8v0J/QvtC/0LDQv9GLXHJcbmNvbnN0IHByb2ZpbGVQb3B1cEVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBwcm9maWxlUG9wdXBTZWxlY3RvcixcclxuICAoZGF0YSkgPT4ge1xyXG4gICAgcHJvZmlsZVBvcHVwRWRpdC5ibG9ja1N1Ym1pdEJ1dHRvbigpO1xyXG5cclxuICAgIGFwaVxyXG4gICAgICAuc2V0VXNlckluZm8oZGF0YSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIHVzZXJJbmZvLmZpbGwocmVzKTtcclxuICAgICAgICB1c2VySW5mby5yZW5kZXJOYW1lKCk7XHJcbiAgICAgICAgdXNlckluZm8ucmVuZGVyQWJvdXQoKTtcclxuICAgICAgICBwcm9maWxlUG9wdXBFZGl0LmNsb3NlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBwcm9maWxlUG9wdXBFZGl0LnVuYmxvY2tTdWJtaXRCdXR0b24oKTtcclxuICAgICAgfSk7XHJcbiAgfSxcclxuICBoYW5kbGVGb3JtT3BlblxyXG4pO1xyXG5cclxuY29uc3QgbmV3Q2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgY2FyZEFkZFBvcHVwLFxyXG4gIChkYXRhKSA9PiB7XHJcbiAgICBuZXdDYXJkUG9wdXAuYmxvY2tTdWJtaXRCdXR0b24oKTtcclxuXHJcbiAgICBhcGlcclxuICAgICAgLmFkZE5ld0NhcmQoZGF0YSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGNhcmRzU2VjdGlvbi5hZGRJdGVtKG5ld0NhcmQocmVzKSwgdHJ1ZSk7XHJcbiAgICAgICAgbmV3Q2FyZFBvcHVwLmNsb3NlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBuZXdDYXJkUG9wdXAudW5ibG9ja1N1Ym1pdEJ1dHRvbigpO1xyXG4gICAgICB9KTtcclxuICB9LFxyXG4gIGhhbmRsZUZvcm1PcGVuXHJcbik7XHJcblxyXG5jb25zdCBpbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKGNhcmRQb3B1cEltZyk7XHJcblxyXG5jb25zdCBwb3B1cFdpdGhDb25maXJtYXRpb24gPSBuZXcgUG9wdXBXaXRoQ29uZmlybWF0aW9uKFxyXG4gIGRlbGV0UG9wdXBTZWxlY3RvcixcclxuICAoY2FyZElkKSA9PiB7XHJcbiAgICBhcGlcclxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZElkKVxyXG4gICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgY2FyZHNbY2FyZElkXS5kZWxldGUoKTtcclxuICAgICAgICBwb3B1cFdpdGhDb25maXJtYXRpb24uY2xvc2UoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XHJcbiAgfVxyXG4pO1xyXG5cclxuY29uc3QgYXZhdGFyRm90b1BvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgYXZhdGFyUG9wdXBTZWxlY3RvcixcclxuICAoZGF0YSkgPT4ge1xyXG4gICAgYXZhdGFyRm90b1BvcHVwLmJsb2NrU3VibWl0QnV0dG9uKCk7XHJcblxyXG4gICAgYXBpXHJcbiAgICAgIC5jaGFuZ2VBdmF0YXIoZGF0YS5saW5rKVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgdXNlckluZm8uZmlsbChyZXMpO1xyXG4gICAgICAgIHVzZXJJbmZvLnJlbmRlckF2YXRhcigpO1xyXG4gICAgICAgIGF2YXRhckZvdG9Qb3B1cC5jbG9zZSgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIpKVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgYXZhdGFyRm90b1BvcHVwLnVuYmxvY2tTdWJtaXRCdXR0b24oKTtcclxuICAgICAgfSk7XHJcbiAgfSxcclxuICBoYW5kbGVGb3JtT3BlblxyXG4pO1xyXG5cclxuLy/Qn9C10YDQstC+0L3QsNGH0LDQu9GM0L3QvtC1INC/0L7Qu9GD0YfQtdC90LjQtSDQtNCw0L3QvdGL0YUg0L7RgiDRgdC10YDQstC10YDQsFxyXG5Qcm9taXNlLmFsbChbYXBpLmdldFVzZXJJbmZvKCksIGFwaS5nZXRJbml0aWFsQ2FyZHMoKV0pXHJcbiAgLnRoZW4oKHJlc3VsdHMpID0+IHtcclxuICAgIHVzZXJJbmZvLmZpbGwocmVzdWx0c1swXSk7XHJcbiAgICB1c2VySW5mby5yZW5kZXJOYW1lKCk7XHJcbiAgICB1c2VySW5mby5yZW5kZXJBYm91dCgpO1xyXG4gICAgdXNlckluZm8ucmVuZGVyQXZhdGFyKCk7XHJcblxyXG4gICAgY2FyZHNTZWN0aW9uLnJlbmRlckl0ZW1zKHJlc3VsdHNbMV0pO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XHJcblxyXG4vL9Cj0YHRgtCw0L3QvtCy0LrQsCDRgdC70YPRiNCw0YLQtdC70LXQuSDQtNC70Y8g0YDQsNCx0L7RgtGLINC/0L7Qv9Cw0L/QvtCyXHJcbnByb2ZpbGVQb3B1cEVkaXQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbnByb2ZpbGVFZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgKHsgbmFtZTogcHJvZmlsZU5hbWVJbnB1dC52YWx1ZSwgYWJvdXQ6IHByb2ZpbGVBYm91dElucHV0LnZhbHVlIH0gPVxyXG4gICAgdXNlckluZm8uZ2V0VXNlckluZm8oKSk7XHJcbiAgcHJvZmlsZVBvcHVwRWRpdC5vcGVuKCk7XHJcbiAgLy8gcHJvZmlsZU5hbWVJbnB1dC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcImlucHV0XCIpKTtcclxuICAvLyBwcm9maWxlQWJvdXRJbnB1dC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChcImlucHV0XCIpKTtcclxufSk7XHJcblxyXG4vL9Cf0L7Qv9Cw0L8g0LTQvtCx0LDQstC70LXQvdC40Y8g0L3QvtCy0L7QuSDQutCw0YDRgtC+0YfQutC4XHJcbm5ld0NhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY2FyZEFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gIG5ld0NhcmRQb3B1cC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuLy/Qn9C+0L/QsNC/INC+0LHQvdC+0LLQu9C10L3QuNGPINCw0LLQsNGC0LDRgNCwXHJcbmF2YXRhckZvdG9Qb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuYXZhdGFyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgYXZhdGFyRm90b1BvcHVwLm9wZW4oKTtcclxufSk7XHJcblxyXG4vL9Cf0L7Qv9Cw0L8g0YEg0YPQstC10LvQuNGH0LXQvdC90YvQvCDQuNC30L7QsdGA0LDQttC10L3QuNC10LxcclxuaW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/Qn9C+0L/QsNC/INGBINC/0L7QtNGC0LLQtdGA0LbQtNC10L3QuNC8INC40L3RhNC+0YDQvNCw0YbQuNC4XHJcbnBvcHVwV2l0aENvbmZpcm1hdGlvbi5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/QktCw0LvQuNC00LDRhtC40Y9cclxudmFsaWRhdG9yRm9ybXMoZm9ybVNlbGVjdG9yKTtcclxuIl0sIm5hbWVzIjpbImFwaUNvbmZpZyIsImJhc2VVcmwiLCJjb25jYXQiLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsIlNlY3Rpb24iLCJyZW5kZXJlciIsImNvbnRhaW5lclNlbGVjdG9yIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJrZXkiLCJ2YWx1ZSIsIml0ZW1zIiwiX3RoaXMiLCJmb3JFYWNoIiwiaXRlbSIsImVsZW1lbnQiLCJhZGRJdGVtIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwicHJlcGVuZCIsImFwcGVuZCIsIkNhcmQiLCJfcmVmIiwidGVtcGxhdGVTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUNhcmQiLCJoYW5kbGVMaWtlQ2FyZCIsInVzZXJJZCIsIm5hbWUiLCJsaW5rIiwibGlrZXMiLCJvd25lciIsImNyZWF0ZWQiLCJjcmVhdGVkQXQiLCJfaWQiLCJfbmFtZSIsIl9saW5rIiwiX2xpa2VzIiwiX293bmVyIiwiX2NyZWF0ZWQiLCJfdXNlcklkIiwiX2lzTGlrZWQiLCJfY2hlY2tJc0xpa2VkIiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZURlbGV0ZUNhcmQiLCJfaGFuZGxlTGlrZUNhcmQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2VsZW1lbnQiLCJfZ2V0VGVtcGxhdGUiLCJfbGlrZUJ1dHRvbiIsIl9saWtlTnVtYmVyIiwiX2xpa2VCdG4iLCJpbWciLCJzcmMiLCJhbHQiLCJ0ZXh0Q29udGVudCIsInNldExpa2VzIiwicmVtb3ZlIiwiX3NldEV2ZW50bGlzdGVuZXJzIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9saWtlQ2FyZCIsIl9oYW5kbGVEZWxldGUiLCJkaXNhYmxlZCIsIl90aGlzMiIsInNvbWUiLCJwZXJzb24iLCJjbGFzc0xpc3QiLCJhZGQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwiX3BvcHVwQ2xvc2VCdG4iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZ0IiwiY2xvc2UiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiUG9wdXBXaXRoSW1hZ2UiLCJfUG9wdXAiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJjYWxsIiwiX2ZpZ3VyZUVsZW1lbnQiLCJfY2FwdGlvbkVsZW1lbnQiLCJpbWFnZUxpbmsiLCJ0ZXh0IiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVTdWJtaXQiLCJoYW5kbGVPcGVuRm9ybSIsIl9oYW5kbGVTdWJtaXQiLCJfZm9ybSIsIl9pbnB1dFZhbHVlcyIsIl9oYW5kbGVPcGVuRm9ybSIsImZvcm1OYW1lIiwiZ2V0QXR0cmlidXRlIiwiX2FsbElucHV0IiwicXVlcnlTZWxlY3RvckFsbCIsIl9zdWJtaXRCdXR0b24iLCJfYnV0dG9uVGV4dCIsImlucHV0IiwiX3RoaXMzIiwicHJldmVudERlZmF1bHQiLCJfc3VibWl0IiwiX2dldElucHV0VmFsdWVzIiwiYmxvY2tlZEJ1dHRvblRleHQiLCJfYmxvY2tlZEJ1dHRvblRleHQiLCJyZXNldCIsIlBvcHVwV2l0aENvbmZpcm1hdGlvbiIsIl9idXR0b24iLCJfdGFyZ2V0IiwiRm9ybVZhbGlkYXRvciIsImZvcm1DbGFzc2VzIiwiZm9ybUVsZW1lbnQiLCJfZm9ybUVsZW1lbnQiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2lucHV0RWxlbWVudHMiLCJBcnJheSIsImZyb20iLCJfYnV0dG9uRWxlbWVudCIsIl9zZXRFdmVudExpc3RlbmVycyIsImlucHV0RWxlbWVudCIsIl9pc1ZhbGlkIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJfaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZUJ1dHRvblN0YXRlIiwiX2VuYWJsZUJ1dHRvblN0YXRlIiwiVXNlckluZm8iLCJuYW1lRWxlbWVudCIsImFib3V0RWxlbWVudCIsImF2YXRhckVsZW1lbnQiLCJfbmFtZUVsZW1lbnQiLCJfYWJvdXRFbGVtZW50IiwiX2F2YXRhckVsZW1lbnQiLCJfcmVmMiIsImFib3V0IiwiYXZhdGFyIiwiY29ob3J0IiwiX2Fib3V0IiwiX2F2YXRhciIsIl9jb2hvcnQiLCJBcGkiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwidXJsIiwiZmV0Y2giLCJtZXRob2QiLCJ0aGVuIiwiX2NoZWNrUmVzcG9uc2UiLCJqb2IiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIl9yZWYzIiwiY2FyZElkIiwicmVzIiwiaXNMaWtlZCIsIl9kZWxldGVMaWtlIiwiX3NldExpa2UiLCJvayIsImpzb24iLCJFcnJvciIsIm1lc3NhZ2UiLCJwcm9maWxlRWxlbWVudCIsInByb2ZpbGVFZGl0QnRuIiwicHJvZmlsZVBvcHVwU2VsZWN0b3IiLCJwcm9maWxlUG9wdXBFZGl0IiwicHJvZmlsZU5hbWVJbnB1dCIsInByb2ZpbGVBYm91dElucHV0IiwiYXZhdGFyQnV0dG9uIiwiY2FyZEFkZEJ0biIsImZvcm1zVmFsaWRhdG9yIiwiY2FyZHMiLCJuZXdDYXJkIiwiZGF0YSIsImNhcmQiLCJoYW5kbGVDYXJkTGlrZSIsInVzZXJJbmZvIiwiZ2VuZXJhdGVDYXJkIiwiaW1hZ2VQb3B1cCIsIm9wZW4iLCJibG9ja0xpa2VCdG4iLCJhcGkiLCJ0b2dnbGVMaWtlIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJmaW5hbGx5IiwidW5ibG9ja0xpa2VCdG4iLCJwb3B1cFdpdGhDb25maXJtYXRpb24iLCJzZXRUYXJnZXQiLCJoYW5kbGVGb3JtT3BlbiIsImhpZGVFcnJvcnMiLCJmb3JtU2VsZWN0b3JzIiwiY2FyZHNTZWN0aW9uIiwiYmxvY2tTdWJtaXRCdXR0b24iLCJzZXRVc2VySW5mbyIsImZpbGwiLCJyZW5kZXJOYW1lIiwicmVuZGVyQWJvdXQiLCJ1bmJsb2NrU3VibWl0QnV0dG9uIiwibmV3Q2FyZFBvcHVwIiwiYWRkTmV3Q2FyZCIsImRlbGV0ZUNhcmQiLCJkZWxldGUiLCJhdmF0YXJGb3RvUG9wdXAiLCJjaGFuZ2VBdmF0YXIiLCJyZW5kZXJBdmF0YXIiLCJQcm9taXNlIiwiYWxsIiwiZ2V0VXNlckluZm8iLCJnZXRJbml0aWFsQ2FyZHMiLCJyZXN1bHRzIiwicmVuZGVySXRlbXMiLCJzZXRFdmVudExpc3RlbmVycyIsIl91c2VySW5mbyRnZXRVc2VySW5mbyIsImZvcm0iLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==