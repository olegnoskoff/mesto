(()=>{"use strict";var t={baseUrl:"https://mesto.nomoreparties.co/v1/".concat("cohort-64"),headers:{authorization:"d44b9fca-9567-456c-ae11-66fa146c6bcd","Content-Type":"application/json"}};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=e,this._container=document.querySelector(n)}var e,r;return e=t,r=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){var n=e._renderer(t);e.addItem(n)}))}},{key:"addItem",value:function(t){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?this._container.prepend(t):this._container.append(t)}}],r&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var u=function(){function t(e,n,r,o,i,u){var a=e.name,c=e.link,l=e.likes,s=e.owner,f=e.createdAt,p=e._id;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=a,this._link=c,this._likes=l,this._owner=s,this._created=f,this._id=p,this._userId=u,this._isLiked=this._checkIsLiked(),this._templateSelector=n,this._handleCardClick=r,this._handleDeleteCard=o,this._handleLikeCard=i}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__icon");var t=this._element.querySelector(".card__image");return t.src=this._link,t.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this.setLikes(),this._owner._id!==this._userId&&this._element.querySelector(".card__delete").remove(),this._setEventlisteners(),this._element}},{key:"_setEventlisteners",value:function(){var t=this;this._element.querySelector(".card__icon").addEventListener("click",(function(){return t._likeCard()})),this._element.querySelector(".card__image").addEventListener("click",(function(){return t._handleCardClick(t._link,t._name)})),this._element.querySelector(".card__delete")&&this._element.querySelector(".card__delete").addEventListener("click",(function(){return t._handleDelete()}))}},{key:"_likeCard",value:function(){this._handleLikeCard(this._id,this._isLiked)}},{key:"blockLikeBtn",value:function(){this._likeButton.disabled=!0}},{key:"unblockLikeBtn",value:function(){this._likeButton.disabled=!1}},{key:"_handleDelete",value:function(){this._handleDeleteCard(this._id)}},{key:"_checkIsLiked",value:function(){var t=this;return this._likes.some((function(e){return e._id===t._userId}))}},{key:"setLikes",value:function(t){var e=this._element.querySelector(".card__like-number"),n=this._element.querySelector(".card__icon");t&&(this._likes=t,this._isLiked=this._checkIsLiked()),e.textContent=this._likes.length,this._isLiked?n.classList.add("card__icon-button_active"):n.classList.remove("card__icon-button_active")}},{key:"delete",value:function(){this._element.remove(),this._element=null}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==a(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===a(o)?o:String(o)),r)}var o}var l=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._popupCloseBtn=this._popup.querySelector(".popup__button-close")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){e.target===e.currentTarget&&t.close()})),this._popupCloseBtn.addEventListener("click",(function(){t.close()}))}}])&&c(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function s(t){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==s(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=h(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},p.apply(this,arguments)}function y(t,e){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},y(t,e)}function h(t){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},h(t)}var b=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&y(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=h(r);if(o){var n=h(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===s(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._figureElement=e._popup.querySelector(".popup__image"),e._captionElement=e._popup.querySelector(".popup__image-name"),e}return e=u,(n=[{key:"open",value:function(t,e){this._figureElement.src=t,this._figureElement.alt=e,this._captionElement.textContent=e,p(h(u.prototype),"open",this).call(this)}}])&&f(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(l);function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==d(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},v.apply(this,arguments)}function m(t,e){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},m(t,e)}function S(t){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},S(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&m(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(r);if(o){var n=S(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===d(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._handleSubmit=e,r._form=r._popup.querySelector(".popup__form"),r._inputValues={},r._handleOpenForm=n,r.formName=r._form.getAttribute("name"),r._allInput=r._form.querySelectorAll(".popup__input"),r._submitButton=r._form.querySelector(".popup__save-button"),r._buttonText=r._submitButton.textContent,r}return e=u,n=[{key:"_getInputValues",value:function(){var t=this;return this._allInput.forEach((function(e){t._inputValues[e.name]=e.value})),this._inputValues}},{key:"setEventListeners",value:function(){var t=this;v(S(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._submit()}))}},{key:"_submit",value:function(){this._handleSubmit(this._getInputValues())}},{key:"blockSubmitButton",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Сохранение...";this._blockedButtonText=t,this._submitButton.disabled=!0,this._submitButton.textContent=this._blockedButtonText}},{key:"unblockSubmitButton",value:function(){this._submitButton.disabled=!1,this._submitButton.textContent=this._buttonText}},{key:"close",value:function(){v(S(u.prototype),"close",this).call(this),this._form.reset()}},{key:"open",value:function(){v(S(u.prototype),"open",this).call(this),this._handleOpenForm()}}],n&&_(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(l);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===g(o)?o:String(o)),r)}var o}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},w.apply(this,arguments)}function O(t,e){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},O(t,e)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var P=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&O(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=j(r);if(o){var n=j(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===g(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleSubmit=e,n._button=n._popup.querySelector(".popup__save-button"),n}return e=u,(n=[{key:"setEventListeners",value:function(){var t=this;w(j(u.prototype),"setEventListeners",this).call(this),this._button.addEventListener("click",(function(){t._handleSubmit(t._target)}))}},{key:"setTarget",value:function(t){this._target=t}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(l);function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function L(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==C(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==C(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===C(o)?o:String(o)),r)}var o}var B=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formElement=n,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var e,n;return e=t,(n=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var t=this;this._inputElements.forEach((function(e){e.addEventListener("input",(function(){t._isValid(e),t._toggleButtonState()}))})),this._toggleButtonState()}},{key:"_isValid",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),n.textContent=e,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent=""}},{key:"hideErrors",value:function(){var t=this;this._inputElements.forEach((function(e){t._hideInputError(e)}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButtonState():this._enableButtonState()}},{key:"disableButtonState",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableButtonState",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_hasInvalidInput",value:function(){return this._inputElements.some((function(t){return!1===t.validity.valid}))}}])&&L(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==T(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===T(o)?o:String(o)),r)}var o}var q=function(){function t(e){var n=e.nameElement,r=e.aboutElement,o=e.avatarElement;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=n,this._aboutElement=r,this._avatarElement=o}var e,n;return e=t,(n=[{key:"fill",value:function(t){var e=t.name,n=t.about,r=t.avatar,o=t.cohort,i=t._id;this._name=e,this._about=n,this._avatar=r,this._cohort=o,this.id=i}},{key:"getUserInfo",value:function(){return{name:this._name,about:this._about}}},{key:"renderName",value:function(){this._nameElement.textContent=this._name}},{key:"renderAbout",value:function(){this._aboutElement.textContent=this._about}},{key:"renderAvatar",value:function(){this._avatarElement.src=this._avatar}}])&&R(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function I(t){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},I(t)}function x(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==I(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===I(o)?o:String(o)),r)}var o}var U=function(){function t(e){var n=e.headers,r=e.baseUrl;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._headers=n,this._baseUrl=r}var e,n;return e=t,(n=[{key:"_checkResponse",value:function(t){return t.ok?t.json():Promise.reject("".concat(t.status," ").concat(t.statusText))}},{key:"getUserInfo",value:function(){var t=this._baseUrl+"/users/me";return fetch(t,{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){var t=this._baseUrl+"/cards";return fetch(t,{headers:this._headers}).then(this._checkResponse)}},{key:"getPageNeedData",value:function(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}},{key:"updateUserInfo",value:function(t){var e=this._baseUrl+"/users/me";return fetch(e,{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then(this._checkResponse)}},{key:"addNewCard",value:function(t){var e=this._baseUrl+"/cards";return fetch(e,{method:"POST",headers:this._headers,body:JSON.stringify(t)}).then(this._checkResponse)}},{key:"removeCard",value:function(t){var e=this._baseUrl+"/cards/".concat(t);return fetch(e,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"addCardLike",value:function(t){var e=this._baseUrl+"/cards/likes/".concat(t);return fetch(e,{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteCardLike",value:function(t){var e=this._baseUrl+"/cards/likes/".concat(t);return fetch(e,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"updateProfileAvatar",value:function(t){var e=this._baseUrl+"/users/me/avatar";return fetch(e,{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then(this._checkResponse)}}])&&x(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),A={name:document.querySelector(".profile__name"),about:document.querySelector(".profile__about"),avatar:document.querySelector(".profile__avatar-img")},D=document.querySelector(".profile__button_type_edit"),N=".popup_type_edit-profile",V=document.querySelector(N),J=V.querySelector(".popup__input_type_name"),F=V.querySelector(".popup__input_type_job"),H=document.querySelector(".profile__avatar-button"),z=document.querySelector(".profile__button_type_add"),M={},G={};function K(t){var e=new u(t,"#card",Q,X,W,tt.id);return G[t._id]=e,e.generateCard()}function Q(t,e){ot.open(t,e)}function W(t,e){G[t].blockLikeButton(),$.toggleLike(t,e).then((function(e){G[t].setLikes(e)})).catch((function(t){return console.error(t)})).finally((function(){G[t].unblockLikeButton()}))}function X(t){it.setTarget(t),it.open()}function Y(){M[this.formName].hideErrors(),M[this.formName].disableButtonState()}var Z,$=new U(t),tt=new q({nameElement:A.name,aboutElement:A.about,avatarElement:A.avatar}),et=new r(K,".cards"),nt=new k(N,(function(t){nt.blockSubmitButton(),$.setUserInfo(t).then((function(t){tt.fill(t),tt.renderName(),tt.renderAbout(),nt.close()})).catch((function(t){return console.error(t)})).finally((function(){nt.unblockSubmitButton()}))}),Y),rt=new k(".popup_type_add-card",(function(t){rt.blockSubmitButton(),$.addNewCard(t).then((function(t){et.addItem(K(t),!0),rt.close()})).catch((function(t){return console.error(t)})).finally((function(){rt.unblockSubmitButton()}))}),Y),ot=new b(".popup_type_image"),it=new P(".popup_type_confirm",(function(t){$.deleteCard(t).then((function(){G[t].delete(),it.close()})).catch((function(t){return console.error(t)}))})),ut=new k(".popup_type_change-avatar",(function(t){ut.blockSubmitButton(),$.updateProfileAvatar(t.link).then((function(t){tt.fill(t),tt.renderAvatar(),ut.close()})).catch((function(t){return console.log(t)})).finally((function(){ut.unblockSubmitButton()}))}),Y);Promise.all([$.getUserInfo(),$.getInitialCards()]).then((function(t){tt.fill(t[0]),tt.renderName(),tt.renderAbout(),tt.renderAvatar(),et.renderItems(t[1])})).catch((function(t){return console.error(t)})),nt.setEventListeners(),D.addEventListener("click",(function(){var t=tt.getUserInfo();J.value=t.name,F.value=t.about,nt.open(),J.dispatchEvent(new Event("input")),F.dispatchEvent(new Event("input"))})),rt.setEventListeners(),z.addEventListener("click",(function(){rt.open()})),ut.setEventListeners(),H.addEventListener("click",(function(){ut.open()})),ot.setEventListeners(),it.setEventListeners(),Z={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},Array.from(document.querySelectorAll(Z.formSelector)).forEach((function(t){var e=new B(Z,t);M[t.getAttribute("name")]=e,e.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,