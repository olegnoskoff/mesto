(()=>{"use strict";var t={baseUrl:"https://mesto.nomoreparties.co/v1/".concat("cohort-64"),headers:{authorization:"d44b9fca-9567-456c-ae11-66fa146c6bcd","Content-Type":"application/json"}};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=e,this._container=document.querySelector(n)}var e,r;return e=t,r=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){var n=e._renderer(t);e.addItem(n)}))}},{key:"addItem",value:function(t){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?this._container.prepend(t):this._container.append(t)}}],r&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var u=function(){function t(e,n,r,o,i,u){var a=e.name,c=e.link,l=e.likes,s=e.owner,f=e.createdAt,p=e._id;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=a,this._link=c,this._likes=l,this._owner=s,this._created=f,this._id=p,this._userId=u,this._isLiked=this._checkIsLiked(),this._templateSelector=n,this._handleCardClick=r,this._handleDeleteCard=o,this._handleLikeCard=i}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__icon");var t=this._element.querySelector(".card__image");return t.src=this._link,t.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this.setLikes(),this._owner._id!==this._userId&&this._element.querySelector(".card__delete").remove(),this._setEventlisteners(),this._element}},{key:"_setEventlisteners",value:function(){var t=this;this._element.querySelector(".card__icon").addEventListener("click",(function(){return t._likeCard()})),this._element.querySelector(".card__image").addEventListener("click",(function(){return t._handleCardClick(t._link,t._name)})),this._element.querySelector(".card__delete")&&this._element.querySelector(".card__delete").addEventListener("click",(function(){return t._handleDelete()}))}},{key:"_likeCard",value:function(){this._handleLikeCard(this._id,this._isLiked)}},{key:"blockLikeBtn",value:function(){this._likeButton.disabled=!0}},{key:"unblockLikeBtn",value:function(){this._likeButton.disabled=!1}},{key:"_handleDelete",value:function(){this._handleDeleteCard(this._id)}},{key:"_checkIsLiked",value:function(){var t=this;return this._likes.some((function(e){return e._id===t._userId}))}},{key:"setLikes",value:function(t){var e=this._element.querySelector(".card__like-number"),n=this._element.querySelector(".card__icon");t&&(this._likes=t,this._isLiked=this._checkIsLiked()),e.textContent=this._likes.length,this._isLiked?n.classList.add("card__icon-button_active"):n.classList.remove("card__icon-button_active")}},{key:"delete",value:function(){this._element.remove(),this._element=null}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==a(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===a(o)?o:String(o)),r)}var o}var l=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._popupCloseBtn=this._popup.querySelector(".popup__button-close")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){e.target===e.currentTarget&&t.close()})),this._popupCloseBtn.addEventListener("click",(function(){t.close()}))}}])&&c(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function s(t){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},s(t)}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==s(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=h(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},p.apply(this,arguments)}function y(t,e){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},y(t,e)}function h(t){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},h(t)}var b=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&y(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=h(r);if(o){var n=h(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===s(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._figureElement=e._popup.querySelector(".popup__image"),e._captionElement=e._popup.querySelector(".popup__image-name"),e}return e=u,(n=[{key:"open",value:function(t,e){this._figureElement.src=t,this._figureElement.alt=e,this._captionElement.textContent=e,p(h(u.prototype),"open",this).call(this)}}])&&f(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(l);function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==d(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},v.apply(this,arguments)}function m(t,e){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},m(t,e)}function S(t){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},S(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&m(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(r);if(o){var n=S(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===d(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._handleSubmit=e,r._form=r._popup.querySelector(".popup__form"),r._inputValues={},r._handleOpenForm=n,r.formName=r._form.getAttribute("name"),r._allInput=r._form.querySelectorAll(".popup__input"),r._submitButton=r._form.querySelector(".popup__save-button"),r._buttonText=r._submitButton.textContent,r}return e=u,n=[{key:"_getInputValues",value:function(){var t=this;return this._allInput.forEach((function(e){t._inputValues[e.name]=e.value})),this._inputValues}},{key:"setEventListeners",value:function(){var t=this;v(S(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._submit()}))}},{key:"_submit",value:function(){this._handleSubmit(this._getInputValues())}},{key:"blockSubmitButton",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Сохранение...";this._blockedButtonText=t,this._submitButton.disabled=!0,this._submitButton.textContent=this._blockedButtonText}},{key:"unblockSubmitButton",value:function(){this._submitButton.disabled=!1,this._submitButton.textContent=this._buttonText}},{key:"close",value:function(){v(S(u.prototype),"close",this).call(this),this._form.reset()}},{key:"open",value:function(){v(S(u.prototype),"open",this).call(this),this._handleOpenForm()}}],n&&_(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(l);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===g(o)?o:String(o)),r)}var o}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},w.apply(this,arguments)}function O(t,e){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},O(t,e)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var P=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&O(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=j(r);if(o){var n=j(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===g(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleSubmit=e,n._button=n._popup.querySelector(".popup__save-button"),n}return e=u,(n=[{key:"setEventListeners",value:function(){var t=this;w(j(u.prototype),"setEventListeners",this).call(this),this._button.addEventListener("click",(function(){t._handleSubmit(t._target)}))}},{key:"setTarget",value:function(t){this._target=t}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(l);function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function L(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==C(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==C(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===C(o)?o:String(o)),r)}var o}var B=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formElement=n,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var e,n;return e=t,(n=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var t=this;this._inputElements.forEach((function(e){e.addEventListener("input",(function(){t._isValid(e),t._toggleButtonState()}))})),this._toggleButtonState()}},{key:"_isValid",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),n.textContent=e,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent=""}},{key:"hideErrors",value:function(){var t=this;this._inputElements.forEach((function(e){t._hideInputError(e)}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButtonState():this._enableButtonState()}},{key:"disableButtonState",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableButtonState",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_hasInvalidInput",value:function(){return this._inputElements.some((function(t){return!1===t.validity.valid}))}}])&&L(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==T(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===T(o)?o:String(o)),r)}var o}var q=function(){function t(e){var n=e.nameElement,r=e.aboutElement,o=e.avatarElement;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=n,this._aboutElement=r,this._avatarElement=o}var e,n;return e=t,(n=[{key:"fill",value:function(t){var e=t.name,n=t.about,r=t.avatar,o=t.cohort,i=t._id;this._name=e,this._about=n,this._avatar=r,this._cohort=o,this.id=i}},{key:"getUserInfo",value:function(){return{name:this._name,about:this._about}}},{key:"renderName",value:function(){this._nameElement.textContent=this._name}},{key:"renderAbout",value:function(){this._aboutElement.textContent=this._about}},{key:"renderAvatar",value:function(){this._avatarElement.src=this._avatar}}])&&R(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function I(t){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},I(t)}function x(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==I(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===I(o)?o:String(o)),r)}var o}var U=function(){function t(e){var n=e.headers,r=e.baseUrl;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._headers=n,this._baseUrl=r}var e,n;return e=t,(n=[{key:"_checkResponse",value:function(t){return t.ok?t.json():Promise.reject("".concat(t.status," ").concat(t.statusText))}},{key:"getUserInfo",value:function(){var t=this._baseUrl+"/users/me";return fetch(t,{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){var t=this._baseUrl+"/cards";return fetch(t,{headers:this._headers}).then(this._checkResponse)}},{key:"getPageNeedData",value:function(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}},{key:"updateUserInfo",value:function(t){var e=this._baseUrl+"/users/me";return fetch(e,{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then(this._checkResponse)}},{key:"addNewCard",value:function(t){var e=this._baseUrl+"/cards";return fetch(e,{method:"POST",headers:this._headers,body:JSON.stringify(t)}).then(this._checkResponse)}},{key:"removeCard",value:function(t){var e=this._baseUrl+"/cards/".concat(t);return fetch(e,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"addCardLike",value:function(t){var e=this._baseUrl+"/cards/likes/".concat(t);return fetch(e,{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteCardLike",value:function(t){var e=this._baseUrl+"/cards/likes/".concat(t);return fetch(e,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"updateProfileAvatar",value:function(t){var e=this._baseUrl+"/users/me/avatar";return fetch(e,{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then(this._checkResponse)}}])&&x(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),A={name:document.querySelector(".profile__name"),about:document.querySelector(".profile__about"),avatar:document.querySelector(".profile__avatar-img")},D=document.querySelector(".profile__button_type_edit"),N=".popup_type_edit-profile",V=document.querySelector(N),J=V.querySelector(".popup__input_type_name"),F=V.querySelector(".popup__input_type_job"),H=document.querySelector(".profile__avatar-button"),z=document.querySelector(".profile__button_type_add"),M={},G={};function K(t){var e=new u(t,"#card",Q,X,W,tt.id);return G[t._id]=e,e.generateCard()}function Q(t,e){ot.open(t,e)}function W(t,e){G[t].blockLikeButton(),$.toggleLike(t,e).then((function(e){G[t].setLikes(e)})).catch((function(t){return console.error(t)})).finally((function(){G[t].unblockLikeButton()}))}function X(t){it.setTarget(t),it.open()}function Y(){M[this.formName].hideErrors(),M[this.formName].disableButtonState()}var Z,$=new U(t),tt=new q({nameElement:A.name,aboutElement:A.about,avatarElement:A.avatar}),et=new r(K,".cards"),nt=new k(N,(function(t){nt.blockSubmitButton(),$.setUserInfo(t).then((function(t){tt.fill(t),tt.renderName(),tt.renderAbout(),nt.close()})).catch((function(t){return console.error(t)})).finally((function(){nt.unblockSubmitButton()}))}),Y),rt=new k(".popup_type_add-card",(function(t){rt.blockSubmitButton(),$.addNewCard(t).then((function(t){et.addItem(K(t),!0),rt.close()})).catch((function(t){return console.error(t)})).finally((function(){rt.unblockSubmitButton()}))}),Y),ot=new b(".popup_type_image"),it=new P(".popup_type_confirm",(function(t){$.deleteCard(t).then((function(){G[t].delete(),it.close()})).catch((function(t){return console.error(t)}))})),ut=new k(".popup_type_change-avatar",(function(t){ut.blockSubmitButton(),$.changeAvatar(t.link).then((function(t){tt.fill(t),tt.renderAvatar(),ut.close()})).catch((function(t){return console.error(t)})).finally((function(){ut.unblockSubmitButton()}))}),Y);Promise.all([$.getUserInfo(),$.getInitialCards()]).then((function(t){tt.fill(t[0]),tt.renderName(),tt.renderAbout(),tt.renderAvatar(),et.renderItems(t[1])})).catch((function(t){return console.error(t)})),nt.setEventListeners(),D.addEventListener("click",(function(){var t=tt.getUserInfo();J.value=t.name,F.value=t.about,nt.open(),J.dispatchEvent(new Event("input")),F.dispatchEvent(new Event("input"))})),rt.setEventListeners(),z.addEventListener("click",(function(){rt.open()})),ut.setEventListeners(),H.addEventListener("click",(function(){ut.open()})),ot.setEventListeners(),it.setEventListeners(),Z={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},Array.from(document.querySelectorAll(Z.formSelector)).forEach((function(t){var e=new B(Z,t);M[t.getAttribute("name")]=e,e.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3lELEdBQ0xqQyxHQUFTc0IsS0FBS1csRUFBUSxJQUN0QmpDLEdBQVN1QixhQUNUdkIsR0FBU3dCLGNBQ1R4QixHQUFTZ0MsZUFFVGIsR0FBYWUsWUFBWUQsRUFBUSxHQUNuQyxJQUNDekIsT0FBTSxTQUFDQyxHQUFHLE9BQUtDLFFBQVFDLE1BQU1GLEVBQUksSUFHcENwQixHQUFpQjhDLG9CQUVqQmhELEVBQWVsSSxpQkFBaUIsU0FBUyxXQUFZLElBQUFtTCxFQUVqRHBDLEdBQVNwQixjQURGVSxFQUFpQnZMLE1BQUtxTyxFQUE1QmxOLEtBQXFDcUssRUFBa0J4TCxNQUFLcU8sRUFBOUI5RSxNQUVqQytCLEdBQWlCYyxPQUNqQmIsRUFBaUIrQyxjQUFjLElBQUlDLE1BQU0sVUFDekMvQyxFQUFrQjhDLGNBQWMsSUFBSUMsTUFBTSxTQUM1QyxJQVlBWixHQUFhUyxvQkFFYjFDLEVBQVd4SSxpQkFBaUIsU0FBUyxXQUNuQ3lLLEdBQWF2QixNQUNmLElBR0EyQixHQUFnQkssb0JBRWhCM0MsRUFBYXZJLGlCQUFpQixTQUFTLFdBQ3JDNkssR0FBZ0IzQixNQUNsQixJQUdBRCxHQUFXaUMsb0JBR1hyQixHQUFzQnFCLG9CQTdMRWpCLEVETkksQ0FBQ2xHLGFBTkosZUFNb0NFLGNBTDNDLGdCQU1oQkUscUJBTHdCLHNCQUtpQkUsb0JBSnJCLDhCQUtwQkUsZ0JBSm9CLDBCQUlZRSxXQUhmLDhCQ1FTRSxNQUFNQyxLQUM5QmpJLFNBQVNpRyxpQkFBaUJxSCxFQUFjbEcsZUFFeEI5RyxTQUFRLFNBQUMyRyxHQUN6QixJQUFNMEgsRUFBTyxJQUFJNUgsRUFBY3VHLEVBQWVyRyxHQUM5QzZFLEVBQWU3RSxFQUFZbEIsYUFBYSxTQUFXNEksRUFDbkRBLEVBQUtDLGtCQUNQLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9hcGlDb25maWcuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0b2tlbiA9ICdkNDRiOWZjYS05NTY3LTQ1NmMtYWUxMS02NmZhMTQ2YzZiY2QnO1xyXG5jb25zdCBjb2hvcnRJZCA9ICdjb2hvcnQtNjQnO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBhcGlDb25maWcgPSB7XHJcbiAgYmFzZVVybDogYGh0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS8ke2NvaG9ydElkfWAsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogdG9rZW4sXHJcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgfVxyXG59OyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3RvcihyZW5kZXJlciwgY29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICB9XG5cbiAgLy/QodC+0LfQtNCw0LV2INC4INC00L7QsdCw0LLQu9GP0LV2INGN0LvQtdC80LXQvdGC0YtcbiAgcmVuZGVySXRlbXMoaXRlbXMpIHtcbiAgICBpdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgICB0aGlzLmFkZEl0ZW0oZWxlbWVudCk7XG4gICAgfSk7XG4gIH1cblxuICAvL9CU0L7QsdCy0LvRj9C10Lwg0Y3Qu9C10LzQtdC90YIg0L3QsCDRgdGC0YDQsNC90LjRhtGDXG4gIGFkZEl0ZW0oaXRlbSwgaXNJbnZlcnNlZCA9IGZhbHNlKSB7XG4gICAgaWYgKGlzSW52ZXJzZWQpIHtcbiAgICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGl0ZW0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kKGl0ZW0pO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKHsgbmFtZSwgbGluaywgbGlrZXMsIG93bmVyLCBjcmVhdGVkQXQ6IGNyZWF0ZWQsIF9pZCB9LCB0ZW1wbGF0ZVNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZURlbGV0ZUNhcmQsIGhhbmRsZUxpa2VDYXJkLCB1c2VySWQpIHtcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICB0aGlzLl9saW5rID0gbGluaztcbiAgICB0aGlzLl9saWtlcyA9IGxpa2VzO1xuICAgIHRoaXMuX293bmVyID0gb3duZXI7XG4gICAgdGhpcy5fY3JlYXRlZCA9IGNyZWF0ZWQ7XG4gICAgdGhpcy5faWQgPSBfaWQ7XG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xuICAgIHRoaXMuX2lzTGlrZWQgPSB0aGlzLl9jaGVja0lzTGlrZWQoKTtcblxuICAgIHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IgPSB0ZW1wbGF0ZVNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkID0gaGFuZGxlRGVsZXRlQ2FyZDtcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2FyZCA9IGhhbmRsZUxpa2VDYXJkO1xuICB9XG5cbiAgICAvL9Co0LDQsdC70L7QvSDRgdC+0LfQtNCw0LLQsNC10LzQvtC5INC60LDRgNGC0L7Rh9C60Lgg0LjQtyDRgNCw0LfQvNC10YLQutC4XG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBjYXJkVGVtcGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yKS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgcmV0dXJuIGNhcmRUZW1wbGU7XG4gIH1cblxuICAgIC8v0KHQvtC30LTQsNC10Lwg0LfQsNC/0L7Qu9C90LXQvdC90YPRjiDQv9C+INC00LDQvdC90YvQvCDQutCw0YDRgtC+0YfQutGDXG4gIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ljb25cIik7XG5cbiAgICAvL9CX0LDQv9C+0LvQvdC10L3QuNC1INGB0L7QtNC10YDQttC40LzQvtCz0L4g0LrQsNGA0YLQvtGH0LrQuFxuICAgIGNvbnN0IGltZyA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcbiAgICBpbWcuc3JjID0gdGhpcy5fbGluaztcbiAgICBpbWcuYWx0ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuXG4gICAgdGhpcy5zZXRMaWtlcygpO1xuICAgIGlmICh0aGlzLl9vd25lci5faWQgIT09IHRoaXMuX3VzZXJJZCkge1xuICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZVwiKS5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICAvL9Cd0LDQttCw0YLQuNC1INC90LAg0LrQsNGA0YLQvtGH0LrRg1xuICAgIHRoaXMuX3NldEV2ZW50bGlzdGVuZXJzKCk7XG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIC8v0KPRgdGC0LDQvdCw0LLQu9C40LLQsNC10Lwg0YHQu9GD0YjQsNGC0LXQu9C4INGB0L7QsdGL0YLQuNC5INC90LAg0Y3Qu9C10LzQtdC90YLRiyDQutCw0YDRgtC+0YfQutC4XG4gIF9zZXRFdmVudGxpc3RlbmVycygpIHtcbiAgICAvL9Cb0LDQudC6IFxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pY29uXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2xpa2VDYXJkKCkpO1xuICAgIC8v0JrQsNGA0YLQuNC90LrQsFxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbGluaywgdGhpcy5fbmFtZSlcbiAgICAgICk7XG4gICAgLy/Qo9C00LDQu9GP0LXQvCDQutCw0YDRgtC+0YfQutGDLCDQv9GA0Lgg0L3QsNC70LjRh9C40LhcbiAgICBpZiAodGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZVwiKSkge1xuICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZVwiKVxuICAgICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2hhbmRsZURlbGV0ZSgpKTtcbiAgICB9XG4gIH1cblxuICAgIC8v0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdC8INC70LDQudC6INC60LDRgNGC0L7Rh9C60LhcbiAgX2xpa2VDYXJkKCkge1xuICAgIHRoaXMuX2hhbmRsZUxpa2VDYXJkKHRoaXMuX2lkLCB0aGlzLl9pc0xpa2VkKTtcbiAgfVxuXG4gICAgLy/QkdC70L7QutC40YDRg9C10Lwg0LvQsNC50LpcbiAgYmxvY2tMaWtlQnRuKCkge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICB9XG5cbiAgICAvL9Cg0LDQt9Cx0LvQvtC60LjRgNGD0LXRgiDQu9Cw0LnQulxuICB1bmJsb2NrTGlrZUJ0bigpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cblxuICAgIC8v0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdC8INC90LDQttCw0YLQuNC1INC90LAg0YPQtNCw0LvQtdC90LjQtSDQutCw0YDRgtC+0YfQutC4XG4gIF9oYW5kbGVEZWxldGUoKSB7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCh0aGlzLl9pZCk7XG4gIH1cblxuICAgIC8v0J7Qv9GA0LXQtNC10LvRj9C10LwsINC10YHRgtGMINC70Lgg0LvQsNC50Log0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPINC90LAg0LrQsNGA0YLQvtGH0LrQtVxuICBfY2hlY2tJc0xpa2VkKCkge1xuICAgIHJldHVybiB0aGlzLl9saWtlcy5zb21lKChwZXJzb24pID0+IHBlcnNvbi5faWQgPT09IHRoaXMuX3VzZXJJZCk7XG4gIH1cblxuICAgIC8v0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdC8INC80LDRgdGB0LjQsiDQu9Cw0LnQutC+0LIg0LrQsNGA0YLQvtGH0LrQuFxuICBzZXRMaWtlcyhsaWtlcykge1xuICAgIGNvbnN0IGxpa2VDb3VudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLW51bWJlclwiKTtcbiAgICBjb25zdCBsaWtlQnRuID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ljb25cIik7XG5cbiAgICBpZiAobGlrZXMpIHtcbiAgICAgIHRoaXMuX2xpa2VzID0gbGlrZXM7XG4gICAgICB0aGlzLl9pc0xpa2VkID0gdGhpcy5fY2hlY2tJc0xpa2VkKCk7XG4gICAgfVxuXG4gICAgbGlrZUNvdW50LnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xuXG4gICAgaWYgKHRoaXMuX2lzTGlrZWQpIHtcbiAgICAgIGxpa2VCdG4uY2xhc3NMaXN0LmFkZChcImNhcmRfX2ljb24tYnV0dG9uX2FjdGl2ZVwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGlrZUJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9faWNvbi1idXR0b25fYWN0aXZlXCIpO1xuICAgIH1cbiAgfVxuXG4gICAgLy/Qo9C00LDQu9GP0LXQvCDQutCw0YDRgtC+0YfQutGDXG4gIGRlbGV0ZSgpIHtcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX3BvcHVwQ2xvc2VCdG4gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19idXR0b24tY2xvc2VcIik7XG4gIH1cblxuICAvL9Ce0YLQutGA0YvQstCw0LXQvFxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgLy/Ql9Cw0LrRgNGL0LLQsNC10LxcbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICAvL0VzY2FwZVxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICAvL9Cj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdC8INGB0LvRg9GI0LDRgtC10LvQuCDRgdC+0LHRi9GC0LjQuVxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChldnQudGFyZ2V0ID09PSBldnQuY3VycmVudFRhcmdldCkgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fcG9wdXBDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9maWd1cmVFbGVtZW50ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIik7XG4gICAgdGhpcy5fY2FwdGlvbkVsZW1lbnQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZS1uYW1lXCIpO1xuICB9XG5cbiAgLy/Ql9Cw0L/QvtC70L3Rj9C10YIg0L3Rg9C20L3Ri9C80Lgg0LfQvdCw0YfQtdC90LjRj9C80Lgg0Lgg0L7RgtC60YDRi9Cy0LDQtdGCXG4gIG9wZW4oaW1hZ2VMaW5rLCB0ZXh0KSB7XG4gICAgdGhpcy5fZmlndXJlRWxlbWVudC5zcmMgPSBpbWFnZUxpbms7XG4gICAgdGhpcy5fZmlndXJlRWxlbWVudC5hbHQgPSB0ZXh0O1xuICAgIHRoaXMuX2NhcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gdGV4dDtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXQsIGhhbmRsZU9wZW5Gb3JtKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlU3VibWl0ID0gaGFuZGxlU3VibWl0O1xuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xuICAgIHRoaXMuX2lucHV0VmFsdWVzID0ge307XG4gICAgdGhpcy5faGFuZGxlT3BlbkZvcm0gPSBoYW5kbGVPcGVuRm9ybTtcbiAgICB0aGlzLmZvcm1OYW1lID0gdGhpcy5fZm9ybS5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpO1xuICAgIHRoaXMuX2FsbElucHV0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3NhdmUtYnV0dG9uXCIpO1xuICAgIHRoaXMuX2J1dHRvblRleHQgPSB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XG4gIH1cblxuICAvL9Ch0L7RhdGA0LDQvdGP0LXQvCDQstGB0LUg0L/QvtC70Y9cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2FsbElucHV0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICB0aGlzLl9pbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLl9pbnB1dFZhbHVlcztcbiAgfVxuXG4gIC8v0KPRgdGC0LDQvdCw0LLQu9C40LLQsNC10Lwg0L3QtdC+0LHRhdC+0LTQuNC80YvQtSDRgdC70YPRiNCw0YLQtdC70LhcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX3N1Ym1pdCgpO1xuICAgIH0pO1xuICB9XG5cbiAgLy/QktGL0L/QvtC70L3Rj9C10Lwg0LTQtdC50YHRgtCy0LjRjyDQv9GA0Lgg0YHQsNCx0LzQuNGC0LUg0YTQvtGA0LzRi1xuICBfc3VibWl0KCkge1xuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgfVxuXG4gIC8v0JHQu9C+0LrQuNGA0YPQtdC8INC60L3QvtC/0LrRgyDQvtGC0L/RgNCw0LLQutC4INCy0L4g0LLRgNC10LzRjyDQt9Cw0L/RgNC+0YHQsFxuICBibG9ja1N1Ym1pdEJ1dHRvbihibG9ja2VkQnV0dG9uVGV4dCA9IFwi0KHQvtGF0YDQsNC90LXQvdC40LUuLi5cIikge1xuICAgIHRoaXMuX2Jsb2NrZWRCdXR0b25UZXh0ID0gYmxvY2tlZEJ1dHRvblRleHQ7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9ibG9ja2VkQnV0dG9uVGV4dDtcbiAgfVxuXG4gIC8v0JLQvtC30LLRgNCw0YnQsNC10Lwg0LrQvdC+0L/QutGDINC+0YLQv9GA0LDQstC60Lgg0L/QvtGB0LvQtSDQsdC70L7QutC40YDQvtCy0LrQuFxuICB1bmJsb2NrU3VibWl0QnV0dG9uKCkge1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX2J1dHRvblRleHQ7XG4gIH1cblxuICAvL9CX0LDQutGA0YvQstCw0LXQvFxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgfVxuXG4gIC8v0J7RgtC60YDRi9Cy0LDQtdC8XG4gIG9wZW4oKSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuX2hhbmRsZU9wZW5Gb3JtKCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZVN1Ym1pdCkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSBoYW5kbGVTdWJtaXQ7XHJcbiAgICB0aGlzLl9idXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NhdmUtYnV0dG9uJyk7XHJcbiAgfVxyXG5cclxuICAvL9Cj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdC8INC90LXQvtCx0YXQvtC00LjQvNGL0LUg0YHQu9GD0YjQsNGC0LXQu9C4XHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHRoaXMuX2J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlU3VibWl0KHRoaXMuX3RhcmdldCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8v0JfQsNC00LDQtdC8INC/0LDRgNCw0LzQtdGC0YAsINGBINC60L7RgtC+0YDRi9C8INGA0LDQsdC+0YLQsNC10YIg0L/QvtC/0LDQv1xyXG4gIHNldFRhcmdldCh0YXJnZXQpIHtcclxuICAgIHRoaXMuX3RhcmdldCA9IHRhcmdldDtcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgICBjb25zdHJ1Y3RvciAoZm9ybUNsYXNzZXMsIGZvcm1FbGVtZW50KSB7XG4gICAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gZm9ybUNsYXNzZXMuZm9ybVNlbGVjdG9yO1xuICAgICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGZvcm1DbGFzc2VzLmlucHV0U2VsZWN0b3I7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGZvcm1DbGFzc2VzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IGZvcm1DbGFzc2VzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBmb3JtQ2xhc3Nlcy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgICB0aGlzLl9lcnJvckNsYXNzID0gZm9ybUNsYXNzZXMuZXJyb3JDbGFzcztcbiAgICAgIHRoaXMuX2lucHV0RWxlbWVudHMgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcikpO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICAgIH1cbiAgXG4gICAgZW5hYmxlVmFsaWRhdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfVxuICBcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMgKCkge1xuICAgICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKCBpbnB1dEVsZW1lbnQgPT4ge1xuICAgICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5faXNWYWxpZChpbnB1dEVsZW1lbnQpO1xuICAgICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gIFxuICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICB9XG4gIFxuICAgIF9pc1ZhbGlkIChpbnB1dEVsZW1lbnQpIHtcbiAgICAgIGlmIChpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG4gIFxuICAgIF9zaG93SW5wdXRFcnJvciAoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcbiAgICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICB9XG4gIFxuICAgIF9oaWRlSW5wdXRFcnJvciAoaW5wdXRFbGVtZW50KSB7XG4gICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgICB9XG4gIFxuICAgIGhpZGVFcnJvcnMoKSB7XG4gICAgICB0aGlzLl9pbnB1dEVsZW1lbnRzLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvciAoaW5wdXQpO1xuICAgICAgfSk7XG4gICAgfVxuIFxuICAgIF90b2dnbGVCdXR0b25TdGF0ZSAoKSB7XG4gICAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcbiAgICAgICAgdGhpcy5kaXNhYmxlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2VuYWJsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZGlzYWJsZUJ1dHRvblN0YXRlICgpIHtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xuICAgIH1cbiAgXG4gICAgX2VuYWJsZUJ1dHRvblN0YXRlICgpIHtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIFxuICAgIF9oYXNJbnZhbGlkSW5wdXQgKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2lucHV0RWxlbWVudHMuc29tZSggaW5wdXRFbGVtZW50ID0+IGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCA9PT0gZmFsc2UpO1xuICAgIH1cbiAgfSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3Ioe25hbWVFbGVtZW50LCBhYm91dEVsZW1lbnQsIGF2YXRhckVsZW1lbnR9KSB7XG4gICAgdGhpcy5fbmFtZUVsZW1lbnQgPSBuYW1lRWxlbWVudDtcbiAgICB0aGlzLl9hYm91dEVsZW1lbnQgPSBhYm91dEVsZW1lbnQ7XG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudCA9IGF2YXRhckVsZW1lbnQ7XG4gIH1cblxuICAvL9Ch0L7RhdGA0LDQvdGP0LXQvCDQv9C+0LvRg9GH0LXQvdC90YPRjiDQuNC90YTQvtGA0LzQsNGG0LjRjiDQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70LVcbiAgZmlsbCh7bmFtZSwgYWJvdXQsIGF2YXRhciwgY29ob3J0LCBfaWR9KSB7XG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgdGhpcy5fYWJvdXQgPSBhYm91dDtcbiAgICB0aGlzLl9hdmF0YXIgPSBhdmF0YXI7XG4gICAgdGhpcy5fY29ob3J0ID0gY29ob3J0O1xuICAgIHRoaXMuaWQgPSBfaWQ7XG4gIH1cblxuICAvL9CS0L7Qt9Cy0YDQsNGJ0LDQtdC8INC40LzRjyDQuCDQuNC90YTRg1xuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5fbmFtZSxcbiAgICAgIGFib3V0OiB0aGlzLl9hYm91dFxuICAgIH1cbiAgfVxuXG4gIC8v0JjQvNGPINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xuICByZW5kZXJOYW1lKCkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgfVxuXG4gIC8v0J4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1XG4gIHJlbmRlckFib3V0KCkge1xuICAgIHRoaXMuX2Fib3V0RWxlbWVudC50ZXh0Q29udGVudCA9IHRoaXMuX2Fib3V0O1xuICB9XG5cbiAgLy/QkNCy0LDRgtCw0YAg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXG4gIHJlbmRlckF2YXRhcigpIHtcbiAgICB0aGlzLl9hdmF0YXJFbGVtZW50LnNyYyA9IHRoaXMuX2F2YXRhcjtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoeyBoZWFkZXJzLCBiYXNlVXJsIH0pIHtcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tSZXNwb25zZShyZXMpIHtcclxuICAgIGlmIChyZXMub2spIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYCR7cmVzLnN0YXR1c30gJHtyZXMuc3RhdHVzVGV4dH1gKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgY29uc3QgcmVxdWVzdFVybCA9IHRoaXMuX2Jhc2VVcmwgKyAnL3VzZXJzL21lJztcclxuICAgIHJldHVybiBmZXRjaChyZXF1ZXN0VXJsLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgY29uc3QgcmVxdWVzdFVybCA9IHRoaXMuX2Jhc2VVcmwgKyAnL2NhcmRzJztcclxuICAgIHJldHVybiBmZXRjaChyZXF1ZXN0VXJsLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgZ2V0UGFnZU5lZWREYXRhKCkge1xyXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldEluaXRpYWxDYXJkcygpLCB0aGlzLmdldFVzZXJJbmZvKCldKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZVVzZXJJbmZvKGJvZHkpIHtcclxuICAgIGNvbnN0IHJlcXVlc3RVcmwgPSB0aGlzLl9iYXNlVXJsICsgJy91c2Vycy9tZSc7XHJcbiAgICByZXR1cm4gZmV0Y2gocmVxdWVzdFVybCwge1xyXG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGFkZE5ld0NhcmQoYm9keSkge1xyXG4gICAgY29uc3QgcmVxdWVzdFVybCA9IHRoaXMuX2Jhc2VVcmwgKyAnL2NhcmRzJztcclxuICAgIHJldHVybiBmZXRjaChyZXF1ZXN0VXJsLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KSxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICByZW1vdmVDYXJkKGNhcmRJZCkge1xyXG4gICAgY29uc3QgcmVxdWVzdFVybCA9IHRoaXMuX2Jhc2VVcmwgKyBgL2NhcmRzLyR7Y2FyZElkfWA7XHJcbiAgICByZXR1cm4gZmV0Y2gocmVxdWVzdFVybCwge1xyXG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGFkZENhcmRMaWtlKGNhcmRJZCkge1xyXG4gICAgY29uc3QgcmVxdWVzdFVybCA9IHRoaXMuX2Jhc2VVcmwgKyBgL2NhcmRzL2xpa2VzLyR7Y2FyZElkfWA7XHJcbiAgICByZXR1cm4gZmV0Y2gocmVxdWVzdFVybCwge1xyXG4gICAgICBtZXRob2Q6ICdQVVQnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmRMaWtlKGNhcmRJZCkge1xyXG4gICAgY29uc3QgcmVxdWVzdFVybCA9IHRoaXMuX2Jhc2VVcmwgKyBgL2NhcmRzL2xpa2VzLyR7Y2FyZElkfWA7XHJcbiAgICByZXR1cm4gZmV0Y2gocmVxdWVzdFVybCwge1xyXG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZVByb2ZpbGVBdmF0YXIoYm9keSkge1xyXG4gICAgY29uc3QgcmVxdWVzdFVybCA9IHRoaXMuX2Jhc2VVcmwgKyBgL3VzZXJzL21lL2F2YXRhcmA7XHJcbiAgICByZXR1cm4gZmV0Y2gocmVxdWVzdFVybCwge1xyXG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcbn0iLCJleHBvcnQgY29uc3Qgc2V0dGluZ3MgPSB7XHJcbiAgICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcclxuICAgIHBvcHVwQnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCIsXHJcbiAgfTtcclxuXHJcbmNvbnN0IHByb2ZpbGVQb3B1cEZvcm0gPSAnLnBvcHVwX19mb3JtJztcclxuY29uc3QgaW5wdXROYW1lID0gJy5wb3B1cF9faW5wdXQnO1xyXG5jb25zdCBzdWJtaXRCdG5TZWxlY3RvciA9ICcucG9wdXBfX3NhdmUtYnV0dG9uJztcclxuY29uc3QgaW5hY3RCdG5DbGFzcyA9ICdwb3B1cF9fc2F2ZS1idXR0b25fZGlzYWJsZWQnO1xyXG5jb25zdCBpbnB1dEVyckNsYXNzID0gJ3BvcHVwX19pbnB1dF90eXBlX2Vycm9yJztcclxuY29uc3QgZXJyb3JDbGFzcyA9ICdwb3B1cF9faW5wdXQtZXJyb3JfdmlzaWJsZSc7XHJcbmV4cG9ydCBjb25zdCBmb3JtU2VsZWN0b3IgPSB7Zm9ybVNlbGVjdG9yOiBwcm9maWxlUG9wdXBGb3JtLCBpbnB1dFNlbGVjdG9yOiBpbnB1dE5hbWUsIFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBzdWJtaXRCdG5TZWxlY3RvciwgaW5hY3RpdmVCdXR0b25DbGFzczogaW5hY3RCdG5DbGFzcywgXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBpbnB1dEVyckNsYXNzLCBlcnJvckNsYXNzXHJcbn07XHJcblxyXG5jb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19uYW1lJyk7XHJcbmNvbnN0IHByb2ZpbGVBYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hYm91dCcpO1xyXG5jb25zdCBwcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhci1pbWcnKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFbGVtZW50ID0ge25hbWU6IHByb2ZpbGVOYW1lLCBhYm91dDogcHJvZmlsZUFib3V0LCBhdmF0YXI6IHByb2ZpbGVBdmF0YXJcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNhcmRzU2VsZWN0b3IgPSAnLmNhcmRzJztcclxuZXhwb3J0IGNvbnN0IGNhcmRUZW1wbGF0ZVNlbGVjdG9yID0gJyNjYXJkJztcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbl90eXBlX2VkaXQnKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVQb3B1cFNlbGVjdG9yID0gJy5wb3B1cF90eXBlX2VkaXQtcHJvZmlsZSc7XHJcbmNvbnN0IHByb2ZpbGVQb3B1cEVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVQb3B1cFNlbGVjdG9yKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVOYW1lSW5wdXQgPSBwcm9maWxlUG9wdXBFZGl0LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdHlwZV9uYW1lJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQWJvdXRJbnB1dCA9IHByb2ZpbGVQb3B1cEVkaXQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF90eXBlX2pvYicpO1xyXG5leHBvcnQgY29uc3QgYXZhdGFyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhci1idXR0b24nKTtcclxuZXhwb3J0IGNvbnN0IGF2YXRhclBvcHVwU2VsZWN0b3IgPSAnLnBvcHVwX3R5cGVfY2hhbmdlLWF2YXRhcic7XHJcbmV4cG9ydCBjb25zdCBjYXJkQWRkQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbl90eXBlX2FkZCcpO1xyXG5leHBvcnQgY29uc3QgY2FyZEFkZFBvcHVwID0gJy5wb3B1cF90eXBlX2FkZC1jYXJkJztcclxuZXhwb3J0IGNvbnN0IGNhcmRQb3B1cEltZyA9ICcucG9wdXBfdHlwZV9pbWFnZSc7XHJcbmV4cG9ydCBjb25zdCBkZWxldFBvcHVwU2VsZWN0b3IgPSAnLnBvcHVwX3R5cGVfY29uZmlybSc7XHJcbiAgIiwiaW1wb3J0ICcuLi9wYWdlcy9pbmRleC5jc3MnO1xyXG5pbXBvcnQge2FwaUNvbmZpZ30gZnJvbSAnLi4vdXRpbHMvYXBpQ29uZmlnLmpzJztcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtYXRpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcblxyXG5pbXBvcnQge1xyXG4gIGNhcmRzU2VsZWN0b3IsIGNhcmRUZW1wbGF0ZVNlbGVjdG9yLCBmb3JtU2VsZWN0b3IsIHByb2ZpbGVFbGVtZW50LFxyXG4gIHByb2ZpbGVFZGl0QnRuLCBwcm9maWxlTmFtZUlucHV0LCBwcm9maWxlQWJvdXRJbnB1dCwgcHJvZmlsZVBvcHVwU2VsZWN0b3IsXHJcbiAgYXZhdGFyQnV0dG9uLCBhdmF0YXJQb3B1cFNlbGVjdG9yLCBjYXJkQWRkQnRuLCBjYXJkQWRkUG9wdXAsIGNhcmRQb3B1cEltZywgZGVsZXRQb3B1cFNlbGVjdG9yLFxyXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuXHJcbmNvbnN0IGZvcm1zVmFsaWRhdG9yID0ge307XHJcbmNvbnN0IGNhcmRzID0ge307IFxyXG5cclxuLy/Ql9Cw0L/Rg9GB0LrQsNC10YIg0LLQsNC70LjQtNCw0YbQuNGOINCy0YHQtdGFINGE0L7RgNC8INC90LAg0YHRgtGA0LDQvdC40YbQtVxyXG5mdW5jdGlvbiB2YWxpZGF0b3JGb3Jtcyhmb3JtU2VsZWN0b3JzKSB7XHJcbiAgY29uc3QgZm9ybVZhbGlkRWxlbWVudHMgPSBBcnJheS5mcm9tKFxyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChmb3JtU2VsZWN0b3JzLmZvcm1TZWxlY3RvcilcclxuICApO1xyXG4gIGZvcm1WYWxpZEVsZW1lbnRzLmZvckVhY2goKGZvcm1FbGVtZW50KSA9PiB7XHJcbiAgICBjb25zdCBmb3JtID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybVNlbGVjdG9ycywgZm9ybUVsZW1lbnQpO1xyXG4gICAgZm9ybXNWYWxpZGF0b3JbZm9ybUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKV0gPSBmb3JtO1xyXG4gICAgZm9ybS5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8v0KHQvtC30LTQsNC10YIg0Y3Qu9C10LzQtdC90YIg0LrQsNGA0YLQvtGH0LrQuFxyXG5mdW5jdGlvbiBuZXdDYXJkKGRhdGEpIHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXHJcbiAgICBkYXRhLGNhcmRUZW1wbGF0ZVNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZURlbGV0ZUNhcmQsIGhhbmRsZUNhcmRMaWtlLCB1c2VySW5mby5pZFxyXG4gICk7XHJcbiAgY2FyZHNbZGF0YS5faWRdID0gY2FyZDtcclxuICByZXR1cm4gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxufVxyXG5cclxuLy/QntCx0YDQsNCx0LDRgtGL0LLQsNC10YIg0L3QsNC20LDRgtC40LUg0L3QsCDQutCw0YDRgtC40L3QutGDINC60LDRgNGC0L7Rh9C60LhcclxuZnVuY3Rpb24gaGFuZGxlQ2FyZENsaWNrKGltYWdlTGluaywgdGV4dCkge1xyXG4gIGltYWdlUG9wdXAub3BlbihpbWFnZUxpbmssIHRleHQpO1xyXG59XHJcblxyXG4vL9Ce0LHRgNCw0LHQsNGC0YvQstCw0LXRgiDQvdCw0LbQsNGC0LjQtSDQvdCwINC70LDQudC6INCyINC60LDRgNGC0L7Rh9C60LVcclxuZnVuY3Rpb24gaGFuZGxlQ2FyZExpa2UoY2FyZElkLCBpc0xpa2VkKSB7XHJcbiAgY2FyZHNbY2FyZElkXS5ibG9ja0xpa2VCdXR0b24oKTtcclxuXHJcbiAgYXBpXHJcbiAgICAudG9nZ2xlTGlrZShjYXJkSWQsIGlzTGlrZWQpXHJcbiAgICAudGhlbigobGlrZXMpID0+IHtcclxuICAgICAgY2FyZHNbY2FyZElkXS5zZXRMaWtlcyhsaWtlcyk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgY2FyZHNbY2FyZElkXS51bmJsb2NrTGlrZUJ1dHRvbigpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8v0J7QsdGA0LDQsdCw0YLRi9Cy0LDQtdGCINC90LDQttCw0YLQuNC1INC90LAg0YPQtNCw0LvQtdC90LjQtSDQutCw0YDRgtC+0YfQutC4XHJcbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgcG9wdXBXaXRoQ29uZmlybWF0aW9uLnNldFRhcmdldChjYXJkSWQpO1xyXG4gIHBvcHVwV2l0aENvbmZpcm1hdGlvbi5vcGVuKCk7XHJcbn1cclxuLy/QktGL0L/QvtC70L3Rj9C10YIg0YHQsdGA0L7RgSDRhNC+0YDQvNGLINC/0YDQuCDQvtGC0LrRgNGL0YLQuNC4INC/0L7Qv9Cw0L/QsCDRgSDRhNC+0YDQvNC+0LlcclxuZnVuY3Rpb24gaGFuZGxlRm9ybU9wZW4oKSB7XHJcbiAgZm9ybXNWYWxpZGF0b3JbdGhpcy5mb3JtTmFtZV0uaGlkZUVycm9ycygpO1xyXG4gIGZvcm1zVmFsaWRhdG9yW3RoaXMuZm9ybU5hbWVdLmRpc2FibGVCdXR0b25TdGF0ZSgpO1xyXG59XHJcblxyXG4vL9CY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPINC60LvQsNGB0YHQvtCyXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoYXBpQ29uZmlnKTtcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICBuYW1lRWxlbWVudDogcHJvZmlsZUVsZW1lbnQubmFtZSxcclxuICBhYm91dEVsZW1lbnQ6IHByb2ZpbGVFbGVtZW50LmFib3V0LFxyXG4gIGF2YXRhckVsZW1lbnQ6IHByb2ZpbGVFbGVtZW50LmF2YXRhcixcclxufSk7XHJcblxyXG5jb25zdCBjYXJkc1NlY3Rpb24gPSBuZXcgU2VjdGlvbihuZXdDYXJkLCBjYXJkc1NlbGVjdG9yKTtcclxuXHJcbi8v0J/QvtC/0LDQv9GLXHJcbmNvbnN0IHByb2ZpbGVQb3B1cEVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBwcm9maWxlUG9wdXBTZWxlY3RvcixcclxuICAoZGF0YSkgPT4ge1xyXG4gICAgcHJvZmlsZVBvcHVwRWRpdC5ibG9ja1N1Ym1pdEJ1dHRvbigpO1xyXG5cclxuICAgIGFwaVxyXG4gICAgICAuc2V0VXNlckluZm8oZGF0YSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIHVzZXJJbmZvLmZpbGwocmVzKTtcclxuICAgICAgICB1c2VySW5mby5yZW5kZXJOYW1lKCk7XHJcbiAgICAgICAgdXNlckluZm8ucmVuZGVyQWJvdXQoKTtcclxuICAgICAgICBwcm9maWxlUG9wdXBFZGl0LmNsb3NlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBwcm9maWxlUG9wdXBFZGl0LnVuYmxvY2tTdWJtaXRCdXR0b24oKTtcclxuICAgICAgfSk7XHJcbiAgfSxcclxuICBoYW5kbGVGb3JtT3BlblxyXG4pO1xyXG5cclxuY29uc3QgbmV3Q2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgY2FyZEFkZFBvcHVwLFxyXG4gIChkYXRhKSA9PiB7XHJcbiAgICBuZXdDYXJkUG9wdXAuYmxvY2tTdWJtaXRCdXR0b24oKTtcclxuXHJcbiAgICBhcGlcclxuICAgICAgLmFkZE5ld0NhcmQoZGF0YSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGNhcmRzU2VjdGlvbi5hZGRJdGVtKG5ld0NhcmQocmVzKSwgdHJ1ZSk7XHJcbiAgICAgICAgbmV3Q2FyZFBvcHVwLmNsb3NlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBuZXdDYXJkUG9wdXAudW5ibG9ja1N1Ym1pdEJ1dHRvbigpO1xyXG4gICAgICB9KTtcclxuICB9LFxyXG4gIGhhbmRsZUZvcm1PcGVuXHJcbik7XHJcblxyXG5jb25zdCBpbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKGNhcmRQb3B1cEltZyk7XHJcblxyXG5jb25zdCBwb3B1cFdpdGhDb25maXJtYXRpb24gPSBuZXcgUG9wdXBXaXRoQ29uZmlybWF0aW9uKFxyXG4gIGRlbGV0UG9wdXBTZWxlY3RvcixcclxuICAoY2FyZElkKSA9PiB7XHJcbiAgICBhcGlcclxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZElkKVxyXG4gICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgY2FyZHNbY2FyZElkXS5kZWxldGUoKTtcclxuICAgICAgICBwb3B1cFdpdGhDb25maXJtYXRpb24uY2xvc2UoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XHJcbiAgfVxyXG4pO1xyXG5cclxuXHJcbmNvbnN0IGF2YXRhckZvdG9Qb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIGF2YXRhclBvcHVwU2VsZWN0b3IsXHJcbiAgKGRhdGEpID0+IHtcclxuICAgIGF2YXRhckZvdG9Qb3B1cC5ibG9ja1N1Ym1pdEJ1dHRvbigpO1xyXG5cclxuICAgIGFwaVxyXG4gICAgICAuY2hhbmdlQXZhdGFyKGRhdGEubGluaylcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIHVzZXJJbmZvLmZpbGwocmVzKTtcclxuICAgICAgICB1c2VySW5mby5yZW5kZXJBdmF0YXIoKTtcclxuICAgICAgICBhdmF0YXJGb3RvUG9wdXAuY2xvc2UoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIGF2YXRhckZvdG9Qb3B1cC51bmJsb2NrU3VibWl0QnV0dG9uKCk7XHJcbiAgICAgIH0pO1xyXG4gIH0sXHJcbiAgaGFuZGxlRm9ybU9wZW5cclxuKTtcclxuXHJcbi8v0J/QtdGA0LLQvtC90LDRh9Cw0LvRjNC90L7QtSDQv9C+0LvRg9GH0LXQvdC40LUg0LTQsNC90L3Ri9GFINC+0YIg0YHQtdGA0LLQtdGA0LBcclxuUHJvbWlzZS5hbGwoW2FwaS5nZXRVc2VySW5mbygpLCBhcGkuZ2V0SW5pdGlhbENhcmRzKCldKVxyXG4gIC50aGVuKChyZXN1bHRzKSA9PiB7XHJcbiAgICB1c2VySW5mby5maWxsKHJlc3VsdHNbMF0pO1xyXG4gICAgdXNlckluZm8ucmVuZGVyTmFtZSgpO1xyXG4gICAgdXNlckluZm8ucmVuZGVyQWJvdXQoKTtcclxuICAgIHVzZXJJbmZvLnJlbmRlckF2YXRhcigpO1xyXG5cclxuICAgIGNhcmRzU2VjdGlvbi5yZW5kZXJJdGVtcyhyZXN1bHRzWzFdKTtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpO1xyXG5cclxuLy/Qo9GB0YLQsNC90L7QstC60LAg0YHQu9GD0YjQsNGC0LXQu9C10Lkg0LTQu9GPINGA0LDQsdC+0YLRiyDQv9C+0L/QsNC/0L7QslxyXG5wcm9maWxlUG9wdXBFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5wcm9maWxlRWRpdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICh7IG5hbWU6IHByb2ZpbGVOYW1lSW5wdXQudmFsdWUsIGFib3V0OiBwcm9maWxlQWJvdXRJbnB1dC52YWx1ZSB9ID1cclxuICAgIHVzZXJJbmZvLmdldFVzZXJJbmZvKCkpO1xyXG4gIHByb2ZpbGVQb3B1cEVkaXQub3BlbigpO1xyXG4gIHByb2ZpbGVOYW1lSW5wdXQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJpbnB1dFwiKSk7XHJcbiAgcHJvZmlsZUFib3V0SW5wdXQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJpbnB1dFwiKSk7XHJcbn0pO1xyXG5cclxuLy8gcHJvZmlsZUVkaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbi8vICAgY29uc3QgdXNlckluZm9EYXRhID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuLy8gICBjb25zdCBwcm9maWxlRm9ybSA9IHByb2ZpbGVQb3B1cEVkaXQuZ2V0Rm9ybUVsZW1lbnQoKTtcclxuLy8gICBwcm9maWxlRm9ybS5lbGVtZW50cy5uYW1lLnZhbHVlID0gdXNlckluZm9EYXRhLnVzZXJOYW1lO1xyXG4vLyAgIHByb2ZpbGVGb3JtLmVsZW1lbnRzLmFib3V0LnZhbHVlID0gdXNlckluZm9EYXRhLnVzZXJEZXNjcmlwdGlvbjtcclxuLy8gICBmb3JtVmFsaWRFbGVtZW50cy5yZXNldFZhbGlkYXRpb24oKTtcclxuLy8gICBwcm9maWxlUG9wdXBFZGl0Lm9wZW4oKTtcclxuLy8gfSk7XHJcblxyXG4vL9Cf0L7Qv9Cw0L8g0LTQvtCx0LDQstC70LXQvdC40Y8g0L3QvtCy0L7QuSDQutCw0YDRgtC+0YfQutC4XHJcbm5ld0NhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY2FyZEFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gIG5ld0NhcmRQb3B1cC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuLy/Qn9C+0L/QsNC/INC+0LHQvdC+0LLQu9C10L3QuNGPINCw0LLQsNGC0LDRgNCwXHJcbmF2YXRhckZvdG9Qb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuYXZhdGFyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgYXZhdGFyRm90b1BvcHVwLm9wZW4oKTtcclxufSk7XHJcblxyXG4vL9Cf0L7Qv9Cw0L8g0YEg0YPQstC10LvQuNGH0LXQvdC90YvQvCDQuNC30L7QsdGA0LDQttC10L3QuNC10LxcclxuaW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/Qn9C+0L/QsNC/INGBINC/0L7QtNGC0LLQtdGA0LbQtNC10L3QuNC8INC40L3RhNC+0YDQvNCw0YbQuNC4XHJcbnBvcHVwV2l0aENvbmZpcm1hdGlvbi5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/QktCw0LvQuNC00LDRhtC40Y9cclxudmFsaWRhdG9yRm9ybXMoZm9ybVNlbGVjdG9yKTtcclxuIl0sIm5hbWVzIjpbImFwaUNvbmZpZyIsImJhc2VVcmwiLCJjb25jYXQiLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsIlNlY3Rpb24iLCJyZW5kZXJlciIsImNvbnRhaW5lclNlbGVjdG9yIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJrZXkiLCJ2YWx1ZSIsIml0ZW1zIiwiX3RoaXMiLCJmb3JFYWNoIiwiaXRlbSIsImVsZW1lbnQiLCJhZGRJdGVtIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwicHJlcGVuZCIsImFwcGVuZCIsIkNhcmQiLCJfcmVmIiwidGVtcGxhdGVTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUNhcmQiLCJoYW5kbGVMaWtlQ2FyZCIsInVzZXJJZCIsIm5hbWUiLCJsaW5rIiwibGlrZXMiLCJvd25lciIsImNyZWF0ZWQiLCJjcmVhdGVkQXQiLCJfaWQiLCJfbmFtZSIsIl9saW5rIiwiX2xpa2VzIiwiX293bmVyIiwiX2NyZWF0ZWQiLCJfdXNlcklkIiwiX2lzTGlrZWQiLCJfY2hlY2tJc0xpa2VkIiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZURlbGV0ZUNhcmQiLCJfaGFuZGxlTGlrZUNhcmQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2VsZW1lbnQiLCJfZ2V0VGVtcGxhdGUiLCJfbGlrZUJ1dHRvbiIsImltZyIsInNyYyIsImFsdCIsInRleHRDb250ZW50Iiwic2V0TGlrZXMiLCJyZW1vdmUiLCJfc2V0RXZlbnRsaXN0ZW5lcnMiLCJhZGRFdmVudExpc3RlbmVyIiwiX2xpa2VDYXJkIiwiX2hhbmRsZURlbGV0ZSIsImRpc2FibGVkIiwiX3RoaXMyIiwic29tZSIsInBlcnNvbiIsImxpa2VDb3VudCIsImxpa2VCdG4iLCJjbGFzc0xpc3QiLCJhZGQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwiX3BvcHVwQ2xvc2VCdG4iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZ0IiwiY2xvc2UiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiUG9wdXBXaXRoSW1hZ2UiLCJfUG9wdXAiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJjYWxsIiwiX2ZpZ3VyZUVsZW1lbnQiLCJfY2FwdGlvbkVsZW1lbnQiLCJpbWFnZUxpbmsiLCJ0ZXh0IiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVTdWJtaXQiLCJoYW5kbGVPcGVuRm9ybSIsIl9oYW5kbGVTdWJtaXQiLCJfZm9ybSIsIl9pbnB1dFZhbHVlcyIsIl9oYW5kbGVPcGVuRm9ybSIsImZvcm1OYW1lIiwiZ2V0QXR0cmlidXRlIiwiX2FsbElucHV0IiwicXVlcnlTZWxlY3RvckFsbCIsIl9zdWJtaXRCdXR0b24iLCJfYnV0dG9uVGV4dCIsImlucHV0IiwiX3RoaXMzIiwicHJldmVudERlZmF1bHQiLCJfc3VibWl0IiwiX2dldElucHV0VmFsdWVzIiwiYmxvY2tlZEJ1dHRvblRleHQiLCJfYmxvY2tlZEJ1dHRvblRleHQiLCJyZXNldCIsIlBvcHVwV2l0aENvbmZpcm1hdGlvbiIsIl9idXR0b24iLCJfdGFyZ2V0IiwiRm9ybVZhbGlkYXRvciIsImZvcm1DbGFzc2VzIiwiZm9ybUVsZW1lbnQiLCJfZm9ybUVsZW1lbnQiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2lucHV0RWxlbWVudHMiLCJBcnJheSIsImZyb20iLCJfYnV0dG9uRWxlbWVudCIsIl9zZXRFdmVudExpc3RlbmVycyIsImlucHV0RWxlbWVudCIsIl9pc1ZhbGlkIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJfaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZUJ1dHRvblN0YXRlIiwiX2VuYWJsZUJ1dHRvblN0YXRlIiwiVXNlckluZm8iLCJuYW1lRWxlbWVudCIsImFib3V0RWxlbWVudCIsImF2YXRhckVsZW1lbnQiLCJfbmFtZUVsZW1lbnQiLCJfYWJvdXRFbGVtZW50IiwiX2F2YXRhckVsZW1lbnQiLCJfcmVmMiIsImFib3V0IiwiYXZhdGFyIiwiY29ob3J0IiwiX2Fib3V0IiwiX2F2YXRhciIsIl9jb2hvcnQiLCJBcGkiLCJfaGVhZGVycyIsIl9iYXNlVXJsIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJyZXF1ZXN0VXJsIiwiZmV0Y2giLCJ0aGVuIiwiX2NoZWNrUmVzcG9uc2UiLCJhbGwiLCJnZXRJbml0aWFsQ2FyZHMiLCJnZXRVc2VySW5mbyIsImJvZHkiLCJtZXRob2QiLCJKU09OIiwic3RyaW5naWZ5IiwiY2FyZElkIiwicHJvZmlsZUVsZW1lbnQiLCJwcm9maWxlRWRpdEJ0biIsInByb2ZpbGVQb3B1cFNlbGVjdG9yIiwicHJvZmlsZVBvcHVwRWRpdCIsInByb2ZpbGVOYW1lSW5wdXQiLCJwcm9maWxlQWJvdXRJbnB1dCIsImF2YXRhckJ1dHRvbiIsImNhcmRBZGRCdG4iLCJmb3Jtc1ZhbGlkYXRvciIsImNhcmRzIiwibmV3Q2FyZCIsImRhdGEiLCJjYXJkIiwiaGFuZGxlQ2FyZExpa2UiLCJ1c2VySW5mbyIsImdlbmVyYXRlQ2FyZCIsImltYWdlUG9wdXAiLCJvcGVuIiwiaXNMaWtlZCIsImJsb2NrTGlrZUJ1dHRvbiIsImFwaSIsInRvZ2dsZUxpa2UiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImZpbmFsbHkiLCJ1bmJsb2NrTGlrZUJ1dHRvbiIsInBvcHVwV2l0aENvbmZpcm1hdGlvbiIsInNldFRhcmdldCIsImhhbmRsZUZvcm1PcGVuIiwiaGlkZUVycm9ycyIsImZvcm1TZWxlY3RvcnMiLCJjYXJkc1NlY3Rpb24iLCJibG9ja1N1Ym1pdEJ1dHRvbiIsInNldFVzZXJJbmZvIiwiZmlsbCIsInJlbmRlck5hbWUiLCJyZW5kZXJBYm91dCIsInVuYmxvY2tTdWJtaXRCdXR0b24iLCJuZXdDYXJkUG9wdXAiLCJhZGROZXdDYXJkIiwiZGVsZXRlQ2FyZCIsImRlbGV0ZSIsImF2YXRhckZvdG9Qb3B1cCIsImNoYW5nZUF2YXRhciIsInJlbmRlckF2YXRhciIsInJlc3VsdHMiLCJyZW5kZXJJdGVtcyIsInNldEV2ZW50TGlzdGVuZXJzIiwiX3VzZXJJbmZvJGdldFVzZXJJbmZvIiwiZGlzcGF0Y2hFdmVudCIsIkV2ZW50IiwiZm9ybSIsImVuYWJsZVZhbGlkYXRpb24iXSwic291cmNlUm9vdCI6IiJ9